const mockData = [
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45264",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45264/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45264/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45264/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45264",
      "id": 957445455,
      "node_id": "MDU6SXNzdWU5NTc0NDU0NTU=",
      "number": 45264,
      "title": "false positive on arrow function overloads that return a generic with a conditional type that has `never` in it",
      "user": {
        "login": "DetachHead",
        "id": 57028336,
        "node_id": "MDQ6VXNlcjU3MDI4MzM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/57028336?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DetachHead",
        "html_url": "https://github.com/DetachHead",
        "followers_url": "https://api.github.com/users/DetachHead/followers",
        "following_url": "https://api.github.com/users/DetachHead/following{/other_user}",
        "gists_url": "https://api.github.com/users/DetachHead/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DetachHead/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DetachHead/subscriptions",
        "organizations_url": "https://api.github.com/users/DetachHead/orgs",
        "repos_url": "https://api.github.com/users/DetachHead/repos",
        "events_url": "https://api.github.com/users/DetachHead/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DetachHead/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-08-01T09:46:50Z",
      "updated_at": "2021-08-01T09:46:50Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\narrow function overload\r\n\r\n### üïó Version & Regression Information\r\n4.4.0-dev.20210801\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?jsx=0&ts=4.4.0-dev.20210801#code/C4TwDgpgBAQghgJwDwBUB8UC8UVQgD2AgDsATAZygAYoB+KYiANwgSgC4GBXAWwCNWAWABQIgPRiU4aAHJivAQhlQAlpWIB7YFDjlyKgObE4fADbRgGqKEhQ5zVjIB0ACgBMAZjduAlCIDGGsTk2gBmGhqcAN4iUHFQLj6c8MhUaLHxqGguTHCmXBCcKEmwiFkZcVk5eQW0RSUp5cIAvlhQVbn5EHU4DWXoWBgxwvFQCBDAXAjEUJ0FOuoOCCLNIuJikAihEP7ApiBQoSqMUEEMGgg8eYdcxLsqQeQiobf3Z3yIicllac+vwA8Zh9kOhql16t8QelhC87gD3v1snNuhDSlCoMNRuNJtNZjVoLoGEsVkA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\ntype Bar<T> = T extends 0 ? never : number\r\n\r\n//Type 'number' is not assignable to type 'never'.(2322)\r\nconst foo: {\r\n    (): Bar<0>\r\n    <T>(value: T): Bar<T>\r\n    <T>(value?: T): Bar<T>\r\n} = <T>(value?: T): Bar<T> => {\r\n    return value as never\r\n}\r\n\r\n//perfectly fine on normal functions\r\nfunction bar(): Bar<0>\r\nfunction bar<T>(value: T): Bar<T>\r\nfunction bar<T>(value?: T): Bar<T> {\r\n    return value as never\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n```\r\nType '<T>(value?: T | undefined) => Bar<T>' is not assignable to type '{ (): never; <T>(value: T): Bar<T>; <T>(value?: T | undefined): Bar<T>; }'.\r\n  Type 'number' is not assignable to type 'never'.(2322)\r\n```\r\n\r\n### üôÇ Expected behavior\r\n\r\nno error\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45263",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45263/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45263/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45263/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/45263",
      "id": 957444375,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NzAwODY5NTk4",
      "number": 45263,
      "title": "Properties on intersections should be readonly only if all declarations are",
      "user": {
        "login": "bwrrp",
        "id": 1515404,
        "node_id": "MDQ6VXNlcjE1MTU0MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1515404?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bwrrp",
        "html_url": "https://github.com/bwrrp",
        "followers_url": "https://api.github.com/users/bwrrp/followers",
        "following_url": "https://api.github.com/users/bwrrp/following{/other_user}",
        "gists_url": "https://api.github.com/users/bwrrp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bwrrp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bwrrp/subscriptions",
        "organizations_url": "https://api.github.com/users/bwrrp/orgs",
        "repos_url": "https://api.github.com/users/bwrrp/repos",
        "events_url": "https://api.github.com/users/bwrrp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bwrrp/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1820464799,
          "node_id": "MDU6TGFiZWwxODIwNDY0Nzk5",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Backlog%20Bug",
          "name": "For Backlog Bug",
          "color": "9ff4ed",
          "default": false,
          "description": "PRs that fix a backlog bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-08-01T09:39:57Z",
      "updated_at": "2021-08-01T09:43:55Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/45263",
        "html_url": "https://github.com/microsoft/TypeScript/pull/45263",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/45263.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/45263.patch"
      },
      "body": "Fixes #45122\r\n\r\nThis changes the behavior of readonly properties in intersection types to be writable if any of the definitions of the property are writable. Before, the property would only be writable if none of its definitions were readonly (same as for unions).\r\n\r\nI've added a new test containing the two cases from the issue, as well as a case that verifies that the property is still readonly if all of the definitions are readonly. I also had to update the baseline for two existing tests:\r\n\r\n* `tests/cases/conformance/types/intersection/intersectionTypeReadonly.ts` - contained a test for the mutable & readonly case, which I've updated to not expect an error\r\n* `tests/cases/compiler/mappedTypeRecursiveInference.ts` - `lib.dom.d.ts` defines the type of `document.defaultView` as `(WindowProxy & typeof globalThis) | null`. It turned out that some of the properties (such as `navigator`) on `WindowProxy` are readonly, while the corresponding global declaration is not. This change makes those properties writable in the intersection type.\r\n\r\nIt seems a little odd that properties defined as readonly on `Window` are considered writable on the global. I'm not sure if that is something that needs to be addressed here?",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45261",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45261/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45261/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45261/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45261",
      "id": 957419952,
      "node_id": "MDU6SXNzdWU5NTc0MTk5NTI=",
      "number": 45261,
      "title": "Structurally assignable generic types with an object contraint are not assignable, when their properties are a type expression of the constraint",
      "user": {
        "login": "soul-codes",
        "id": 40335030,
        "node_id": "MDQ6VXNlcjQwMzM1MDMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/40335030?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/soul-codes",
        "html_url": "https://github.com/soul-codes",
        "followers_url": "https://api.github.com/users/soul-codes/followers",
        "following_url": "https://api.github.com/users/soul-codes/following{/other_user}",
        "gists_url": "https://api.github.com/users/soul-codes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/soul-codes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/soul-codes/subscriptions",
        "organizations_url": "https://api.github.com/users/soul-codes/orgs",
        "repos_url": "https://api.github.com/users/soul-codes/repos",
        "events_url": "https://api.github.com/users/soul-codes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/soul-codes/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-08-01T07:41:11Z",
      "updated_at": "2021-08-01T07:55:46Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\ngeneric object type assignment\r\n\r\n### üïó Version & Regression Information\r\n\r\nThis is the behavior in every version I tried, and I reviewed the FAQ for all entries on \"bugs that aren't bugs\", and nothing matches.\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?#code/CYUwxgNghgTiAEYD2A7AzgF3gWygaxABUBPABxAC54AeQgPgAoBKeAXjvkIG4AoHkAB6kkMLBjIIAgrXiCMIFMDTwA3vCgUArijwokAdxTwAvh1aqe8K3CjBUEYvABmSJFUIBtAERQvAXXgAH3hMGABLFABzHmM+ZHQsJDwqaRUNFE1sACMQGFNvFyR-Nhx8IglqVI1QiMj8r0L-RiZeeMx4fQALYgBRGBgRAEYU6jSKDOzc0xLcAhJyStHqjHCo02bW1Hau3v6RACYRsYmcmAAaLIoatbNSuYqqq5Xa9eZNhI7uvoGYAGYj9KZU4XJ6rOq3WblBaPE65EFZVwQEBQFCvFo8IA)\r\n\r\n### üíª Code\r\n\r\n```ts\r\ndeclare const makeType: <T>() => T;\r\n\r\nexport type A<T extends { a:unknown }> = {\r\n   readonly foo: T[\"a\"] | string\r\n}\r\n\r\nconst ok: A<{a:number}>[\"foo\"] = makeType<A<{a:string}>[\"foo\"]>();\r\nconst whyError1: A<{a:number}> = makeType<A<{a:string}>>();\r\nconst whyError2: A<{a:number,b:string}> = makeType<A<{a:string}>>();\r\nconst whyError3: A<{a:number,b:string}> = makeType<A<{a:number,b:boolean}>>();\r\n```\r\n\r\nNote that in the code above:\r\n- The type `{ readonly foo: string }` is assignable to `A<T>` **for _all_ `T`**.\r\n- `A<{ a: string }` _is_ `{ readonly foo: string }`.\r\n\r\n### üôÅ Actual behavior\r\n\r\nThe assignments of `whyError1`, `whyError2`, `whyError3` fail even though the types on both sides _structurally_ resolve to what should be assignable types. \r\n\r\n- For `whyError1` and `whyError2`, LHS resolves to `{ readonly foo: number|string }`, RHS resolves to `{ readonly foo: string }`.\r\n- For `whyError3`, both LHS and RHS resolve to `{ readonly foo: number|string}`.\r\n\r\n### üôÇ Expected behavior\r\n\r\nAll assignments should be allowable.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45260",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45260/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45260/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45260/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45260",
      "id": 957410657,
      "node_id": "MDU6SXNzdWU5NTc0MTA2NTc=",
      "number": 45260,
      "title": "Missing autocomplete on the \"abstract\" keyword",
      "user": {
        "login": "pushkine",
        "id": 30108880,
        "node_id": "MDQ6VXNlcjMwMTA4ODgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/30108880?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pushkine",
        "html_url": "https://github.com/pushkine",
        "followers_url": "https://api.github.com/users/pushkine/followers",
        "following_url": "https://api.github.com/users/pushkine/following{/other_user}",
        "gists_url": "https://api.github.com/users/pushkine/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pushkine/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pushkine/subscriptions",
        "organizations_url": "https://api.github.com/users/pushkine/orgs",
        "repos_url": "https://api.github.com/users/pushkine/repos",
        "events_url": "https://api.github.com/users/pushkine/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pushkine/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-08-01T06:47:07Z",
      "updated_at": "2021-08-01T06:47:07Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üïó Version & Regression Information\r\n\r\nts stable & nightly\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground Link](https://www.typescriptlang.org/play?#code/KYDwDg9gTgLgBAYwDYEMDOa4DEITgbwF8g)\r\n    \r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\nexport class Foo {}\r\n```\r\n\r\n<img width=\"415\" alt=\"Code_2021-08-01_08-43-51\" src=\"https://user-images.githubusercontent.com/30108880/127761997-0627bb01-0393-4bdb-84a0-bda9d332747c.png\">\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45259",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45259/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45259/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45259/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45259",
      "id": 957366265,
      "node_id": "MDU6SXNzdWU5NTczNjYyNjU=",
      "number": 45259,
      "title": "Converting string of typescript to code but keep getting _os.platform is undefined",
      "user": {
        "login": "AlenToma",
        "id": 8482107,
        "node_id": "MDQ6VXNlcjg0ODIxMDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8482107?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AlenToma",
        "html_url": "https://github.com/AlenToma",
        "followers_url": "https://api.github.com/users/AlenToma/followers",
        "following_url": "https://api.github.com/users/AlenToma/following{/other_user}",
        "gists_url": "https://api.github.com/users/AlenToma/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AlenToma/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AlenToma/subscriptions",
        "organizations_url": "https://api.github.com/users/AlenToma/orgs",
        "repos_url": "https://api.github.com/users/AlenToma/repos",
        "events_url": "https://api.github.com/users/AlenToma/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AlenToma/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-08-01T02:15:25Z",
      "updated_at": "2021-08-01T02:15:25Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\nI am trying to compile string to code using `typescript` in `react-native` but keep getting the below error in `typescript`\r\n\r\n`TypeError: _os.platform is not a function. (In '_os.platform()', '_os.platform' is undefined)`\r\n\r\nHere is the test code I made\r\n\r\n```\r\nimport * as ts from \"typescript\";\r\nconst sourceFile = ts.createSourceFile(\r\n  \"file.ts\", // filePath\r\n  \"function myFunction() {}\", // fileText\r\n  ts.ScriptTarget.Latest, // scriptTarget\r\n  true // setParentNodes -- sets the `parent` property\r\n);\r\n```\r\n\r\nNote: I have tested reinstalling the typescript with no luck.\r\n\r\ntypescript version NO: `4.3.5`\r\n\r\n\r\n\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45258",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45258/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45258/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45258/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45258",
      "id": 957332252,
      "node_id": "MDU6SXNzdWU5NTczMzIyNTI=",
      "number": 45258,
      "title": "unused type declaration causes totally unrelated error (Index signatures are incompatible)",
      "user": {
        "login": "safareli",
        "id": 1932383,
        "node_id": "MDQ6VXNlcjE5MzIzODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1932383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/safareli",
        "html_url": "https://github.com/safareli",
        "followers_url": "https://api.github.com/users/safareli/followers",
        "following_url": "https://api.github.com/users/safareli/following{/other_user}",
        "gists_url": "https://api.github.com/users/safareli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/safareli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/safareli/subscriptions",
        "organizations_url": "https://api.github.com/users/safareli/orgs",
        "repos_url": "https://api.github.com/users/safareli/repos",
        "events_url": "https://api.github.com/users/safareli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/safareli/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-31T22:37:30Z",
      "updated_at": "2021-07-31T22:37:30Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n \r\n\r\n### üïó Version & Regression Information\r\n\r\nGetting same error on all versions I tried.\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&ts=4.3.5#code/JYOwLgpgTgZghgYwgAgEoRgHgApQ8AD2QgMhABMBnZSsKUAcwD5kBvAKGWQBI8YAuGnUYBuTsgAOfQoNz4CYgL7jkndmACeElADE9yALxtk8OIJABXALYAjaMkVj2AemfJgMZBoD2F5Am8rKwhwZDAAC2BqABtQFF8wMPCUaChvKGQAd2Bo6ORyKLgJbTgoFzcAOQB5ABUAUWQagAkASQBlRoBNbAb25Gqa5ABVNrqAEWQAQUHJgBlZ5EBeDcBGPfUtFABpSYBZFq2xgC0Go1ZkOEpyc8uLwXQAqHJMWnoQBgAaZD0dJhEHdnZyBAENFSigAiBaMgCIIOFw8JQJN4IRBKLcgelHs9GB9LLZoD9xDAiWj7pjhK8Pl8CY5-q53J4fH4AkEQokEiZgFBIYDgaU4GBgEjkN5PAADLa7fZHUVnCjICwgZnBUIRKLCkAQcqNJoNOqoVBVVDIADqLXm+UKxQgpSWqzpmm0yAle0mh2OxiunpuaHRDye5Penz0Pz+-3YVgstHQlG80QAbhB0DAABSnXgYQQAIkzHyk8iz8MRyMomYcHwIAEoxHSuLW6-WG42m02APptgB6nbbLa1kygDGsrOFngdKAA5KdC0jKCiSRj-S9A7i7FAQ0SBD7SQvsUHvr9FGP3NQQN5EudKMAGCA4DZoigwN5JHzgpAMiKwutkGO7vPM1Pizmm7zliFK7kwTBjgAdFqXA1Os1DvlI3jaFAmhfv+M6UIeoLuIqgQSPywC3hA0E1rWcGOt+vpkouOLWCuEFHsgJ5npQF5Xjed5hI+o5fj+fogYGVJQTB9YtBQJA0Je15gBY8JnHguHMgRArEaRbhNhR47LtAh5qixZxsdJnH3jxn5jl8In-DyIKKTACoIAKQoRlGKKxgmSaYIMJBkFQQi0cgABqTDJuIfBolgNRMG84jKUirKokBfo1B8-E0TuwVMOwFaCIFyAAD7yhJMBxOQYZAA)\r\n\r\n### üíª Code\r\n\r\n```ts\r\ninterface Ref<Prefix extends string> {\r\n  $ref: string;\r\n  prefix: Prefix;\r\n}\r\n   \r\n \r\ntype FFF = { faa: number };\r\n\r\n// if you comment this line out the error will disappear\r\n// NOTE THIS TYPE IS NOT USED AT ALL üò±\r\ntype KAMIKADZE = { asdasdasd: Record<string, FFF>; }\r\n\r\ndeclare const x: {\r\n  responses: Record<string, number>;\r\n  fff: Record<string, FFF>;\r\n};\r\n\r\n// if you comment out first declaration of `KAMIKADZE` and uncomment this one\r\n// THE ERROR WILL disappear üò±\r\n// type KAMIKADZE = { asdasdasd: Record<string, FFF>; }\r\n\r\n\r\n\r\nmustResolveRef({ $ref: \"\", prefix: \"responses\" }, x);\r\n//                                            ___^^^___\r\n// Argument of type '{ responses: Record<string, number>; fff: Record<string, FFF>; }' is not assignable to parameter of type 'Record<\"responses\", Record<string, FFF>>'.\r\n//   Types of property 'responses' are incompatible.\r\n//     Type 'Record<string, number>' is not assignable to type 'Record<string, FFF>'.\r\n//       Index signatures are incompatible.\r\n//         Type 'number' is not assignable to type 'FFF'.\r\n\r\n\r\ndeclare function mustResolveRef<T extends string, V>(\r\n  ref: Ref<T>,\r\n  components: Record<T, Record<string, V>>\r\n): V | undefined\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nActual behavior is super strange. tried to express this in code comments.\r\n\r\n### üôÇ Expected behavior\r\n\r\nIt's expected that, having some type declaration, that's not used and is not in conflict with anything, to not cause totally unrelated error.\r\n\r\nPlus the error itself shouldn't be thrown as if I do this, all works fine:\r\n```\r\nconst y: Pick<typeof x,\"responses\"> = x\r\nmustResolveRef({ $ref: \"\", prefix: \"responses\" }, y);\r\n```\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45257",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45257/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45257/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45257/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45257",
      "id": 957199990,
      "node_id": "MDU6SXNzdWU5NTcxOTk5OTA=",
      "number": 45257,
      "title": "Type guard cannot remove `undefined` from `Partial<T>[keyof T] | undefined`",
      "user": {
        "login": "Jason3S",
        "id": 3740137,
        "node_id": "MDQ6VXNlcjM3NDAxMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3740137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jason3S",
        "html_url": "https://github.com/Jason3S",
        "followers_url": "https://api.github.com/users/Jason3S/followers",
        "following_url": "https://api.github.com/users/Jason3S/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jason3S/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jason3S/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jason3S/subscriptions",
        "organizations_url": "https://api.github.com/users/Jason3S/orgs",
        "repos_url": "https://api.github.com/users/Jason3S/repos",
        "events_url": "https://api.github.com/users/Jason3S/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jason3S/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971155,
          "node_id": "MDU6TGFiZWwxMTM5NzExNTU=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Suggestion",
          "name": "Suggestion",
          "color": "006b75",
          "default": false,
          "description": "An idea for TypeScript"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-07-31T08:21:11Z",
      "updated_at": "2021-08-01T06:15:38Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\nWhen writing a function to merge object `A` with non-undefined values from object `B` into `C` where `A` is of type `T` and B is of type `Partial<T>`, I came across a situation where the type guard seems to be failing.\r\n\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n- type guard\r\n- Partial<T>\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about _common-bugs-that-arent-bugs_\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?jsx=4&ts=4.4.0-beta#code/GYVwdgxgLglg9mABAWwKYCcDmqDSqCeAzgDwAqAfABQCGAXIqQDSIBG9ACterNQDZnlmAawKF6lEfjjAGASgDaAXVn1SiAN4AoRDsQQEhKIgBuqxAF4NiAHS3qiAL4BubbuBx0iSvrCHEkxGl-UVkNV11dHz9jPhBUC1Z5SUUXCIiYGUoY3jjEAEJzS3AAE1RgGDBUYtCtNLqTJIJFBOy41PqHcMcu9FQoEHQkYxdOzVBIWAQUDGw8IgBJQgARMoqqgRpVZjZETm4YPgFhUXFJINIFZTNayIMjUwYE9Rs7R3add09vO+D8QJlJIQal0IlF7rF4pYWI18CkQboMl4YMtVpVilkIbJgfU0sYYc1LK1UO80p0ImTdL1+oMTCNNJoKlAMMBqBB4gAhMIRagAfnoLDgcF4qGoYDpDLATPQLLZiAAgohUAAPJlgYqERCcm46OisQXC0Xi8bQeBINBYVBy9mbeXbejs45EU4EIJyy7Y26+e70BWWZ62az2ZxdT5eMG-f6-IFc+rhokJaHJEnpTLxgpFNWoqoenE6PHJFoQ5O6Ck6UuIKkDIZG8Amqbm7ByvY8Xg2uV23ZcFvEOWCKPOqQyN1KHN6H4PX1WANBkmh75eiNBQGj0HjiEJ-HFnSIjE5eLpxAlLPVGO5hoFwlF+Flrrlys04aaUbGyZIZErcpoja6tQAH0Pmaftm9D2MijzahWfRVog9gHkeQHFHSQA)\r\n\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\nfunction merge<T>(a: T, b: Partial<T>, keys: (keyof T)[]): T {\r\n    const v: T = { ...a };\r\n    for (const key of keys) {\r\n        const value = b[key];\r\n        if (value !== undefined) {\r\n            v[key] = value;\r\n        }\r\n    }\r\n    return v;\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n<!-- What happened, and why it was wrong -->\r\n\r\nThere is an error at `v[key] = value;`:\r\n```\r\nType 'T[keyof T] | undefined' is not assignable to type 'T[keyof T]'.\r\n  Type 'undefined' is not assignable to type 'T[keyof T]'.\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/3740137/127733201-d6ced402-0bab-471b-89a9-31ab566d4dd8.png)\r\n\r\nClearly `value` is NOT `undefined`, yet the compiler complains that it is.\r\n\r\n### üôÇ Expected behavior\r\n\r\n<!-- What you expected to happen instead, and why -->\r\nI would expect that the code compiled.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45256",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45256/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45256/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45256/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45256",
      "id": 957132870,
      "node_id": "MDU6SXNzdWU5NTcxMzI4NzA=",
      "number": 45256,
      "title": "Auto-imports suggested in classes, but in hard to repro cases",
      "user": {
        "login": "DanielRosenwasser",
        "id": 972891,
        "node_id": "MDQ6VXNlcjk3Mjg5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/972891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DanielRosenwasser",
        "html_url": "https://github.com/DanielRosenwasser",
        "followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
        "following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
        "organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
        "repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
        "events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 1478314712,
          "node_id": "MDU6TGFiZWwxNDc4MzE0NzEy",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20Auto-import",
          "name": "Domain: Auto-import",
          "color": "61a8f4",
          "default": false,
          "description": ""
        },
        {
          "id": 3183084247,
          "node_id": "MDU6TGFiZWwzMTgzMDg0MjQ3",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20Inlay%20Hints",
          "name": "Domain: Inlay Hints",
          "color": "3B7755",
          "default": false,
          "description": ""
        },
        {
          "id": 611777722,
          "node_id": "MDU6TGFiZWw2MTE3Nzc3MjI=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20Investigation",
          "name": "Needs Investigation",
          "color": "DDDDDD",
          "default": false,
          "description": "This issue needs a team member to investigate its status."
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "andrewbranch",
        "id": 3277153,
        "node_id": "MDQ6VXNlcjMyNzcxNTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbranch",
        "html_url": "https://github.com/andrewbranch",
        "followers_url": "https://api.github.com/users/andrewbranch/followers",
        "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
        "repos_url": "https://api.github.com/users/andrewbranch/repos",
        "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
        "type": "User",
        "site_admin": true
      },
      "assignees": [
        {
          "login": "andrewbranch",
          "id": 3277153,
          "node_id": "MDQ6VXNlcjMyNzcxNTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3277153?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewbranch",
          "html_url": "https://github.com/andrewbranch",
          "followers_url": "https://api.github.com/users/andrewbranch/followers",
          "following_url": "https://api.github.com/users/andrewbranch/following{/other_user}",
          "gists_url": "https://api.github.com/users/andrewbranch/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/andrewbranch/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/andrewbranch/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewbranch/orgs",
          "repos_url": "https://api.github.com/users/andrewbranch/repos",
          "events_url": "https://api.github.com/users/andrewbranch/events{/privacy}",
          "received_events_url": "https://api.github.com/users/andrewbranch/received_events",
          "type": "User",
          "site_admin": true
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/144",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/144",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/144/labels",
        "id": 6812774,
        "node_id": "MDk6TWlsZXN0b25lNjgxMjc3NA==",
        "number": 144,
        "title": "TypeScript 4.4.1 (RC)",
        "description": "",
        "creator": {
          "login": "DanielRosenwasser",
          "id": 972891,
          "node_id": "MDQ6VXNlcjk3Mjg5MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/972891?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/DanielRosenwasser",
          "html_url": "https://github.com/DanielRosenwasser",
          "followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
          "following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
          "gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
          "organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
          "repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
          "events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
          "received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 310,
        "closed_issues": 49,
        "state": "open",
        "created_at": "2021-06-01T17:28:18Z",
        "updated_at": "2021-07-31T00:26:57Z",
        "due_on": "2021-08-10T07:00:00Z",
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2021-07-31T00:26:57Z",
      "updated_at": "2021-07-31T01:24:48Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "Some JS file:\r\n\r\n```js\r\nvar x = require('util');\r\n\r\nx.formatWithOptions\r\n```\r\n\r\n\r\nSome TS file\r\n\r\n```ts\r\nclass Thing {\r\n    /**/\r\n}\r\n```\r\n\r\nIf I start typing `public f`, I'll get auto-import suggestions from `util` for something like `formatWithOptions`. This turns into\r\n\r\n```ts\r\nimport { formatWithOptions } from \"util\";\r\n\r\nclass Thing {\r\n    public formatWithOptions\r\n}\r\n```\r\n\r\nwhich is obviously a useless import.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45255",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45255/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45255/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45255/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45255",
      "id": 957127470,
      "node_id": "MDU6SXNzdWU5NTcxMjc0NzA=",
      "number": 45255,
      "title": "Probable bug: Can't infer an invariant generic on contravariant position when involving another generic",
      "user": {
        "login": "devanshj",
        "id": 30295578,
        "node_id": "MDQ6VXNlcjMwMjk1NTc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/30295578?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/devanshj",
        "html_url": "https://github.com/devanshj",
        "followers_url": "https://api.github.com/users/devanshj/followers",
        "following_url": "https://api.github.com/users/devanshj/following{/other_user}",
        "gists_url": "https://api.github.com/users/devanshj/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/devanshj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/devanshj/subscriptions",
        "organizations_url": "https://api.github.com/users/devanshj/orgs",
        "repos_url": "https://api.github.com/users/devanshj/repos",
        "events_url": "https://api.github.com/users/devanshj/events{/privacy}",
        "received_events_url": "https://api.github.com/users/devanshj/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-31T00:03:37Z",
      "updated_at": "2021-07-31T00:05:36Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\ninvariant generic, contravariant inference\r\n\r\n### üïó Version & Regression Information\r\n\r\nTested with 4.3.5\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground](https://www.typescriptlang.org/play?#code/CYUwxgNghgTiAEYD2A7AzgF3sAXPAPACoA08AqgHwAUA+ngN7wBueJ8AtnlRqwJTwBeCuVIAzLgFc8ZfkOZIAlsHgBfWcKaLgAKFCRYCZOixQ8AIihnd4aHESpM8AEbmnV3VXrb4zPFGLeHHhYchgBPuLwEoLCXj4+ECBYGCCYAIzmloJRgSraatoecb7w-oGc8NyZZurwYYGR0XLFCUl1qRgATNXZErn5vIXAnoEspeFB8DQxzhONMy3wickdAMyuZr39BUWjfhMVVLVOc3hNsYGtK5gALBtbPnlqQA)\r\n\r\n### üíª Code\r\n\r\n```ts\r\ndeclare const d: <T, U>(_: { v: T, m: (t: T) => U, f: (u: U) => void }) => void\r\ndeclare const a: \"a\"\r\ndeclare const b: \"b\"\r\n\r\nd({\r\n  v: a,\r\n  m: t => t,\r\n  f: u => {\r\n    let test1: \"a\" = u // Type 'unknown' is not assignable to type '\"a\"'.\r\n  }\r\n})\r\n\r\nd({\r\n  v: a,\r\n  m: (t: \"a\") => t,\r\n  f: u => {\r\n    let test2: \"a\" = u\r\n  }\r\n})\r\n\r\nd({\r\n  v: a,\r\n  m: _ => b,\r\n  f: u => {\r\n    let test3: \"b\" = u // Type 'unknown' is not assignable to type '\"b\"'\r\n  }\r\n})\r\n\r\nd({\r\n  v: a,\r\n  m: () => b,\r\n  f: u => {\r\n    let test4: \"b\" = u\r\n  }\r\n})\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nIn 1st and 3rd function call `U` gets inferred to `unknown`\r\n\r\n### üôÇ Expected behavior\r\n\r\nIn 1st function call  `U` should get inferred to `\"a\"` and in 3rd function call `U` should get inferred to `\"b\"`.\r\n\r\nClearly the contravariant position of `U` in `m` seems to be a problem because if we annotate it (as done in 2nd call) or omit it (as done in 4th call) it gets inferred to what is expect and there are no error.\r\n\r\nA real world use case:\r\n```ts\r\ndeclare const branch:\r\n  <T, U extends T>(_: { test: T, if: (t: T) => t is U, then: (u: U) => void }) => void\r\n\r\ndeclare const x: \"a\" | \"b\"\r\n\r\nbranch({\r\n  test: x,\r\n  if: (t): t is \"a\" => t === \"a\",\r\n  then: u => {\r\n    let test1: \"a\" = u // Type '\"a\" | \"b\"' is not assignable to type '\"a\"'\r\n  }\r\n})\r\n\r\nbranch({\r\n  test: x,\r\n  if: (t: \"a\" | \"b\"): t is \"a\" => t === \"a\",\r\n  then: u => {\r\n    let test2: \"a\" = u // compiles\r\n  }\r\n})\r\n```\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45254",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45254/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45254/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45254/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45254",
      "id": 957105833,
      "node_id": "MDU6SXNzdWU5NTcxMDU4MzM=",
      "number": 45254,
      "title": "Quick info crashes on '@typedef'",
      "user": {
        "login": "DanielRosenwasser",
        "id": 972891,
        "node_id": "MDQ6VXNlcjk3Mjg5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/972891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DanielRosenwasser",
        "html_url": "https://github.com/DanielRosenwasser",
        "followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
        "following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
        "organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
        "repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
        "events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 943100196,
          "node_id": "MDU6TGFiZWw5NDMxMDAxOTY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20Quick%20Info",
          "name": "Domain: Quick Info",
          "color": "5071bf",
          "default": false,
          "description": "e.g. hover text, tool-tips, and tooltips."
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "sandersn",
        "id": 293473,
        "node_id": "MDQ6VXNlcjI5MzQ3Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/293473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sandersn",
        "html_url": "https://github.com/sandersn",
        "followers_url": "https://api.github.com/users/sandersn/followers",
        "following_url": "https://api.github.com/users/sandersn/following{/other_user}",
        "gists_url": "https://api.github.com/users/sandersn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sandersn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sandersn/subscriptions",
        "organizations_url": "https://api.github.com/users/sandersn/orgs",
        "repos_url": "https://api.github.com/users/sandersn/repos",
        "events_url": "https://api.github.com/users/sandersn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sandersn/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "sandersn",
          "id": 293473,
          "node_id": "MDQ6VXNlcjI5MzQ3Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/293473?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sandersn",
          "html_url": "https://github.com/sandersn",
          "followers_url": "https://api.github.com/users/sandersn/followers",
          "following_url": "https://api.github.com/users/sandersn/following{/other_user}",
          "gists_url": "https://api.github.com/users/sandersn/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sandersn/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sandersn/subscriptions",
          "organizations_url": "https://api.github.com/users/sandersn/orgs",
          "repos_url": "https://api.github.com/users/sandersn/repos",
          "events_url": "https://api.github.com/users/sandersn/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sandersn/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/144",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/144",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/144/labels",
        "id": 6812774,
        "node_id": "MDk6TWlsZXN0b25lNjgxMjc3NA==",
        "number": 144,
        "title": "TypeScript 4.4.1 (RC)",
        "description": "",
        "creator": {
          "login": "DanielRosenwasser",
          "id": 972891,
          "node_id": "MDQ6VXNlcjk3Mjg5MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/972891?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/DanielRosenwasser",
          "html_url": "https://github.com/DanielRosenwasser",
          "followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
          "following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
          "gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
          "organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
          "repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
          "events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
          "received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 310,
        "closed_issues": 49,
        "state": "open",
        "created_at": "2021-06-01T17:28:18Z",
        "updated_at": "2021-07-31T00:26:57Z",
        "due_on": "2021-08-10T07:00:00Z",
        "closed_at": null
      },
      "comments": 0,
      "created_at": "2021-07-30T22:54:27Z",
      "updated_at": "2021-07-30T22:54:37Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "```ts\r\n/**\r\n * @typedef AdditionalWallabyConfig Additional valid Wallaby config properties\r\n * that aren't defined in {@link IWallabyConfig}.\r\n * @property {boolean} autoDetect\r\n */\r\n```\r\n\r\nRequest info on `AdditionalWallabyConfig`\r\n\r\n```\r\n[Trace  - 22:53:10.810] <semantic> Response received: quickinfo (6). Request took 25 ms. Success: false . Message: Error processing request. Cannot read property 'parent' of undefined\r\nTypeError: Cannot read property 'parent' of undefined\r\n    at getSymbolAtLocation (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:80604:38)\r\n    at Object.getSymbolAtLocation (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:45024:31)\r\n    at Object.buildLinkParts (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:120133:84)\r\n    at c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:130137:131\r\n    at Object.flatMap (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:515:25)\r\n    at getDisplayPartsFromComment (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:130137:23)\r\n    at c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:130097:36\r\n    at Object.forEachUnique (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:119892:34)\r\n    at Object.getJsDocCommentsFromDeclarations (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:130092:16)\r\n    at getDocumentationComment (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:152533:28)\r\n    at SymbolObject.getDocumentationComment (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:152320:49)\r\n    at SymbolObject.getContextualDocumentationComment (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:152340:33)\r\n    at Object.getSymbolDisplayPartsDocumentationAndSymbolKind (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:134875:40)\r\n    at c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:153400:41\r\n    at Object.runWithCancellationToken (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:45254:28)\r\n    at Proxy.getQuickInfoAtPosition (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:153399:34)\r\n    at IOSession.Session.getQuickInfoWorker (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:164458:62)\r\n    at Session.handlers.ts.Map.ts.getEntries._a.<computed> (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:163368:61)\r\n    at c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:165210:88\r\n    at IOSession.Session.executeWithRequestId (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:165201:28)\r\n    at IOSession.Session.executeCommand (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:165210:33)\r\n    at IOSession.Session.onMessage (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:165236:35)\r\n    at Interface.<anonymous> (c:\\Users\\drosen\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\\extensions\\node_modules\\typescript\\lib\\tsserver.js:167833:31)\r\n    at Interface.emit (events.js:315:20)\r\n    at Interface._onLine (readline.js:337:10)\r\n    at Interface._normalWrite (readline.js:482:12)\r\n    at Socket.ondata (readline.js:194:10)\r\n    at Socket.emit (events.js:315:20)\r\n    at addChunk (internal/streams/readable.js:309:12)\r\n    at readableAddChunk (internal/streams/readable.js:284:9)\r\n    at Socket.Readable.push (internal/streams/readable.js:223:10)\r\n    at Pipe.onStreamRead (internal/stream_base_commons.js:188:23)\r\n```\r\n\r\nWeirdly, if you request quick info after that, it'll give you the right result!",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45253",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45253/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45253/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45253/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45253",
      "id": 957077059,
      "node_id": "MDU6SXNzdWU5NTcwNzcwNTk=",
      "number": 45253,
      "title": "TS don't recognize array tuples in *.js files even when they are specified in definition file",
      "user": {
        "login": "suns-echoes",
        "id": 12611018,
        "node_id": "MDQ6VXNlcjEyNjExMDE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/12611018?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/suns-echoes",
        "html_url": "https://github.com/suns-echoes",
        "followers_url": "https://api.github.com/users/suns-echoes/followers",
        "following_url": "https://api.github.com/users/suns-echoes/following{/other_user}",
        "gists_url": "https://api.github.com/users/suns-echoes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/suns-echoes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/suns-echoes/subscriptions",
        "organizations_url": "https://api.github.com/users/suns-echoes/orgs",
        "repos_url": "https://api.github.com/users/suns-echoes/repos",
        "events_url": "https://api.github.com/users/suns-echoes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/suns-echoes/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-30T21:42:39Z",
      "updated_at": "2021-07-30T21:42:39Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\nArray tuples not working for JS files\r\nArrays in JS files are always union of element types so tuple type never works\r\nBroken tuples in JS files\r\n\r\n### üïó Version & Regression Information\r\n\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about array tuples and types union\r\n- It looks like it never worked\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Workbench Repro](https://www.typescriptlang.org/dev/bug-workbench/?checkJs=true&allowJs=true&noEmit=true#code/PTAEAEEMBtoewO4CkDOBYAUCCBjAFgKY4DWqmm24AZgJbQEB2kAtgQFygH2sMAuAdABN+vdBgIAPAA5wATr1C8AnlIKgAyr1kBXHL22y1AXlAAKANqYAkMtUcUWmgwDmAGmtwpogPwc4AIwArIgUAH1AGbVh3DCsUbX9fDS1dfUMYgF1QcMjmfwJZbNAHWSdnAEpzLJyo6ABucnFpOQUcaEgUFFAAUW5GBQBvaxLUgwJTco5NHT0xzABfRspaeiZWDi4CHgFAsUkZeVA2jq7erf7QIdiR2cMJy+srQzSGCNqG2MWML4owajpGCx2KBBAUaAA3AjCXaYGjMA6DHp9PigeagKiyODMUAAcn4wE2234uxxH0w+xaR3anVAABEwZDBJwJLxGIJTsjBsMUrdxuUHrEngQXqBLIKrOYcQBBHGuN7RUWPKwSnEAIVll3mcrFyt1OMg-hwsqVyoAjAAmADMMV1VgyGRtyvtjoyHysXy+QA)\r\n\r\n### üíª Code\r\n\r\n```ts\r\n// @allowJs\r\n// @checkJs\r\n\r\n// @filename: element.d.ts\r\nexport type Structure = ([\r\n\ttype: string,\r\n\topts?: object | null,\r\n\tsub?: Structure,\r\n] | number | string)[] | null;\r\n\r\nexport class Element {\r\n\tstructure(): Structure\r\n}\r\n\r\n// @filename: element.js\r\nexport class Element {\r\n\tstructure() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n// @filename: derived.js\r\nimport { Element } from './element.js';\r\n\r\nexport class Derived extends Element {\r\n\tstructure() {\r\n\t\treturn [\r\n\t\t\t['A', null, [\r\n\t\t\t\t['B', {}, [\r\n\t\t\t\t\t'abc',\r\n\t\t\t\t\t123,\r\n\t\t\t\t]],\r\n\t\t\t]],\r\n\t\t];\r\n\t}\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nCompiler Errors\r\n\r\nProperty 'structure' in type 'Derived' is not assignable to the same property in base type 'Element'.\r\n  Type '() => (string | {}[][] | null)[][]' is not assignable to type '() => Structure'.\r\n    Type '(string | {}[][] | null)[][]' is not assignable to type 'Structure'.\r\n      Type '(string | {}[][] | null)[]' is not assignable to type 'string | number | [type: string, opts?: object | null | undefined, sub?: Structure | undefined]'.\r\n        Type '(string | {}[][] | null)[]' is not assignable to type '[type: string, opts?: object | null | undefined, sub?: Structure | undefined]'.\r\n          Target requires 1 element(s) but source may have fewer.\r\n\r\nReturned structure from Derived class is interpreted as union of types and cause compiler error even though it matches Structure type from declaration type.\r\n\r\n### üôÇ Expected behavior\r\n\r\nCompiler should first try to check if structure returned from Derived class matches tuple from definition file.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45251",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45251/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45251/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45251/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45251",
      "id": 956970059,
      "node_id": "MDU6SXNzdWU5NTY5NzAwNTk=",
      "number": 45251,
      "title": "Array spread in compiled JS files is incorrect when targeting ES5",
      "user": {
        "login": "eritbh",
        "id": 4165301,
        "node_id": "MDQ6VXNlcjQxNjUzMDE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4165301?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eritbh",
        "html_url": "https://github.com/eritbh",
        "followers_url": "https://api.github.com/users/eritbh/followers",
        "following_url": "https://api.github.com/users/eritbh/following{/other_user}",
        "gists_url": "https://api.github.com/users/eritbh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eritbh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eritbh/subscriptions",
        "organizations_url": "https://api.github.com/users/eritbh/orgs",
        "repos_url": "https://api.github.com/users/eritbh/repos",
        "events_url": "https://api.github.com/users/eritbh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eritbh/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-30T18:20:55Z",
      "updated_at": "2021-07-30T18:23:31Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\narray spread, iterator spread, empty array\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about _the spread operator_.\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\nPlayground does not support the `--allowJs` flag, so I can't provide a playground link. If the bug workbench supports demonstrating runtime behavior bugs, I can't figure out how.\r\n\r\n### üíª Code\r\n\r\n```js\r\nconst foo = new Set([1, 2]);\r\nconsole.log([...foo.values()]); // expected: [1, 2]\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nCompiling the above Javascript file with `--allowJs` in all versions of Typescript I tested results in incorrect behavior at runtime. The actual behavior varies based on the version installed. I tested against `typescript@3`, which generates a runtime error, `typescript@4.2` and `@4.3`, which both result in empty arrays being logged, and `typescript@next`, which puts the iterator itself inside the array.\r\n\r\n<details>\r\n<summary>4.4.0-dev.20210730</summary>\r\n\r\n```\r\n% tsc test.js --allowJs --target es5 --outfile test.out.js\r\n\r\n% cat test.out.js\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n};\r\nvar foo = new Map();\r\nfoo.set('a', 1);\r\nfoo.set('b', 2);\r\nconsole.log(__spreadArray([], foo.values(), true));\r\n\r\n% node test.out.js\r\n[ [Map Iterator] { 1, 2 } ]\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>4.3.5 and 4.2.4</summary>\r\n\r\n```\r\n% tsc test.js --allowJs --target es5 --outfile test.out.js\r\n\r\n% cat test.out.js\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nvar foo = new Map();\r\nfoo.set('a', 1);\r\nfoo.set('b', 2);\r\nconsole.log(__spreadArray([], foo.values()));\r\n\r\n% node test.out.js\r\n[]\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>3.9.10</summary>\r\n\r\n```\r\n% tsc test.js --allowJs --target es5 --outfile test.out.js\r\n\r\n% cat test.out.js\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nvar foo = new Map();\r\nfoo.set('a', 1);\r\nfoo.set('b', 2);\r\nconsole.log(__spreadArrays(foo.values()));\r\n\r\n% node test.out.js\r\n/home/erin/test.out.js:3\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n                 ^\r\n\r\nRangeError: Invalid array length\r\n    at __spreadArrays (/home/erin/test.out.js:3:18)\r\n    at Object.<anonymous> (/home/erin/test.out.js:11:13)\r\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\r\n    at Module.load (internal/modules/cjs/loader.js:928:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\r\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\r\n    at internal/main/run_main_module.js:17:47\r\n```\r\n</details>\r\n\r\nNote that adding the `--checkJs` flag alongside `--allowJs`, or just putting the same code in a `.ts` file, returns an error:\r\n\r\n```\r\n% tsc test.js --allowJs --checkJs --target ES5 --outfile test.out.js\r\ntest.js:1:17 - error TS2583: Cannot find name 'Map'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.\r\n\r\n1 const foo = new Map();\r\n                  ~~~\r\n```\r\n\r\nSince the error states `--lib es2015` is required, and es2015 is a later version than the target of es5, this can lead the user to fix the error by bumping the build target to es2015, which doesn't try to include a helper for the spread operator.\r\n\r\nOn the other hand, following the advice of the error directly and setting `lib` higher than `target` results in a different error, which in turn suggests adding the `--downlevelIteration` flag. After following the prompts directly, I wound up with the following:\r\n\r\n<details>\r\n<summary>Correctly behaving code from lots of flags with a large helper</summary>\r\n\r\n```\r\n% tsc test.js --allowJs --checkJs --target ES5 --lib dom,es2015 --downlevelIteration --outfile test.out.js\r\n\r\n% cat test.out.js\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n};\r\nvar foo = new Map();\r\nfoo.set('a', 1);\r\nfoo.set('b', 2);\r\nconsole.log(__spreadArray([], __read(foo.values()), false));\r\n\r\n% node test.out.js\r\n[ 1, 2 ]\r\n```\r\n</details>\r\n\r\n### üôÇ Expected behavior\r\n\r\n<!-- What you expected to happen instead, and why -->\r\n\r\nEither the emitted code should work correctly, or the compiler should error. I'm not exactly sure what the correct behavior is, since the bug arises when using builtins TS doesn't have helpers for and can't assume are present in the given target. It seems like an error may be appropriate, but since `--checkJs` isn't being used (and an error is in fact thrown if it is used), maybe the right call is just to rework the helper so it works across targets? Or maybe this isn't a bug at all, and setting a target lower than the code requires (or failing to change the default target) is just user error - I'm not entirely sure what's considered a bug with `--allowJs` but not `--checkJs`, but emitting transformed code which has different behavior than the input code doesn't seem right to me.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45249",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45249/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45249/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45249/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45249",
      "id": 956744446,
      "node_id": "MDU6SXNzdWU5NTY3NDQ0NDY=",
      "number": 45249,
      "title": "Performance: `extends` check balloons number of instantations and degrades performance",
      "user": {
        "login": "andreialecu",
        "id": 697707,
        "node_id": "MDQ6VXNlcjY5NzcwNw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/697707?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andreialecu",
        "html_url": "https://github.com/andreialecu",
        "followers_url": "https://api.github.com/users/andreialecu/followers",
        "following_url": "https://api.github.com/users/andreialecu/following{/other_user}",
        "gists_url": "https://api.github.com/users/andreialecu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andreialecu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andreialecu/subscriptions",
        "organizations_url": "https://api.github.com/users/andreialecu/orgs",
        "repos_url": "https://api.github.com/users/andreialecu/repos",
        "events_url": "https://api.github.com/users/andreialecu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andreialecu/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-30T13:24:38Z",
      "updated_at": "2021-07-30T15:00:52Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\nThe Mongoose project recently introduced their own typescript types, therefore deprecating the DefinitelyTyped types.\r\n\r\nHowever, the new types suffer from some big performance issues, greatly slowing down the VS Code developer experience. I've been investigating the problem and noticed that the issue seems to occur from some `extends` checks.\r\n\r\nRelated issues in mongoose repo: \r\nhttps://github.com/Automattic/mongoose/issues/10349\r\nhttps://github.com/Automattic/mongoose/issues/10487\r\nhttps://github.com/Automattic/mongoose/issues/10492\r\n\r\n### üîé Search Terms\r\n\r\nperformance extends instantiations recursiveTypeRelatedTo\r\n\r\n### üïó Version & Regression Information\r\n\r\nThis occurs on TS 4.3.5.\r\n\r\n### ‚èØ Playground Link\r\n\r\nUnfortunately no playground link, but I made a very simple repro at: https://github.com/andreialecu/typescript-performance-extends\r\n\r\nTake a look at the README there.\r\n\r\n### üíª Code\r\n\r\nThis diff in `mongoose`'s types seems to completely eradicate the problem:\r\n\r\n```diff\r\ndiff --git a/types/mongoose.d.ts b/types/mongoose.d.ts\r\nindex 9e0ad99..2fab5ff 100644\r\n--- a/types/mongoose.d.ts\r\n+++ b/types/mongoose.d.ts\r\n@@ -1232,7 +1232,7 @@ declare module 'mongoose' {\r\n   type PostMiddlewareFunction<ThisType, ResType = any> = (this: ThisType, res: ResType, next: (err?: CallbackError) => void) => void | Promise<void>;\r\n   type ErrorHandlingMiddlewareFunction<ThisType, ResType = any> = (this: ThisType, err: NativeError, res: ResType, next: (err?: CallbackError) => void) => void;\r\n \r\n-  class Schema<DocType = Document, M extends Model<DocType, any, any> = Model<any, any, any>, SchemaDefinitionType = undefined, TInstanceMethods = ExtractMethods<M>> extends events.EventEmitter {\r\n+  class Schema<DocType = Document, M = Model<any, any, any>, SchemaDefinitionType = undefined, TInstanceMethods = any> extends events.EventEmitter {\r\n     /**\r\n      * Create a new schema\r\n      */\r\n```\r\n\r\nThe difference between before and after are:\r\nBefore:\r\n```\r\nIdentifiers:                45586\r\nSymbols:                    76446\r\nTypes:                      20569\r\nInstantiations:             93884\r\nMemory used:               93011K\r\nAssignability cache size:    5146\r\nCheck time:                 0.67s\r\n```\r\n\r\nAfter:\r\n```\r\nIdentifiers:                45582\r\nSymbols:                    27736\r\nTypes:                        710\r\nInstantiations:               818\r\nMemory used:               59482K\r\nCheck time:                 0.03s\r\n```\r\n\r\nI realize the code after the diff isn't exactly equivalent, but the problem seems to be related to the `extends` check. Avoiding extends gets rid of the issue.\r\n\r\n\r\nHere's a cpu profile:\r\n\r\n[cpuprofile.zip](https://github.com/microsoft/TypeScript/files/6907812/cpuprofile.zip)\r\n\r\nThe 'before' version shows:\r\n\r\n<img width=\"682\" alt=\"Screenshot 2021-07-30 at 16 23 45\" src=\"https://user-images.githubusercontent.com/697707/127659315-9dac124f-c46b-45a7-a283-1c19f69aac8f.png\">\r\n\r\n### üôÅ Actual behavior\r\n\r\nSlow type checking performance, especially in VS code.\r\n\r\n### üôÇ Expected behavior\r\n\r\nBetter performance.\r\n\r\n--- \r\n\r\nI opened this in the hope that there is value in investigating the repro by the TS team, in order to check whether any performance improvements in cases such as this one are possible.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45248",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45248/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45248/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45248/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45248",
      "id": 956630615,
      "node_id": "MDU6SXNzdWU5NTY2MzA2MTU=",
      "number": 45248,
      "title": "Fatal Error parsing JSDoc @link",
      "user": {
        "login": "jsbrain",
        "id": 20225909,
        "node_id": "MDQ6VXNlcjIwMjI1OTA5",
        "avatar_url": "https://avatars.githubusercontent.com/u/20225909?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsbrain",
        "html_url": "https://github.com/jsbrain",
        "followers_url": "https://api.github.com/users/jsbrain/followers",
        "following_url": "https://api.github.com/users/jsbrain/following{/other_user}",
        "gists_url": "https://api.github.com/users/jsbrain/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jsbrain/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jsbrain/subscriptions",
        "organizations_url": "https://api.github.com/users/jsbrain/orgs",
        "repos_url": "https://api.github.com/users/jsbrain/repos",
        "events_url": "https://api.github.com/users/jsbrain/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jsbrain/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 1064051041,
          "node_id": "MDU6TGFiZWwxMDY0MDUxMDQx",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Crash",
          "name": "Crash",
          "color": "d93f0b",
          "default": false,
          "description": "For flagging bugs which are compiler or service crashes or unclean exits, rather than bad output"
        },
        {
          "id": 501613019,
          "node_id": "MDU6TGFiZWw1MDE2MTMwMTk=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20JSDoc",
          "name": "Domain: JSDoc",
          "color": "c5def5",
          "default": false,
          "description": "Relates to JSDoc parsing and type generation"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "sandersn",
        "id": 293473,
        "node_id": "MDQ6VXNlcjI5MzQ3Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/293473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sandersn",
        "html_url": "https://github.com/sandersn",
        "followers_url": "https://api.github.com/users/sandersn/followers",
        "following_url": "https://api.github.com/users/sandersn/following{/other_user}",
        "gists_url": "https://api.github.com/users/sandersn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sandersn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sandersn/subscriptions",
        "organizations_url": "https://api.github.com/users/sandersn/orgs",
        "repos_url": "https://api.github.com/users/sandersn/repos",
        "events_url": "https://api.github.com/users/sandersn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sandersn/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "sandersn",
          "id": 293473,
          "node_id": "MDQ6VXNlcjI5MzQ3Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/293473?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sandersn",
          "html_url": "https://github.com/sandersn",
          "followers_url": "https://api.github.com/users/sandersn/followers",
          "following_url": "https://api.github.com/users/sandersn/following{/other_user}",
          "gists_url": "https://api.github.com/users/sandersn/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sandersn/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sandersn/subscriptions",
          "organizations_url": "https://api.github.com/users/sandersn/orgs",
          "repos_url": "https://api.github.com/users/sandersn/repos",
          "events_url": "https://api.github.com/users/sandersn/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sandersn/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/144",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/144",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/144/labels",
        "id": 6812774,
        "node_id": "MDk6TWlsZXN0b25lNjgxMjc3NA==",
        "number": 144,
        "title": "TypeScript 4.4.1 (RC)",
        "description": "",
        "creator": {
          "login": "DanielRosenwasser",
          "id": 972891,
          "node_id": "MDQ6VXNlcjk3Mjg5MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/972891?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/DanielRosenwasser",
          "html_url": "https://github.com/DanielRosenwasser",
          "followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
          "following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
          "gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
          "organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
          "repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
          "events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
          "received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 310,
        "closed_issues": 49,
        "state": "open",
        "created_at": "2021-06-01T17:28:18Z",
        "updated_at": "2021-07-31T00:26:57Z",
        "due_on": "2021-08-10T07:00:00Z",
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2021-07-30T10:43:46Z",
      "updated_at": "2021-07-30T22:55:00Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\nI have a project with a wallaby.js config file at the project root. Just after adding some JSDoc comments in said file the tsc crashes with:\r\n\r\n```\r\n Error  Cannot read property 'text' of undefined\r\n```\r\n\r\nAfter fiddling around a bit I noticed, that it fails when I use {@link IWallabyConfig} in the JSDoc comment. Without the {@link} it compiles just fine.\r\n\r\nMy file looks like this:\r\n\r\n```ts\r\n// @ts-check\r\n/**\r\n * @typedef { import(\"wallabyjs\").IWallaby } IWallaby\r\n * @typedef { import(\"wallabyjs\").IWallabyConfig } IWallabyConfig\r\n */\r\n/**\r\n * @typedef AdditionalWallabyConfig Additional valid Wallaby config properties\r\n * that aren't defined in {@link IWallabyConfig}.                <---- adding this will cause the error.\r\n * @property {boolean} autoDetect\r\n */\r\n/**\r\n * @typedef {Partial<IWallabyConfig> & AdditionalWallabyConfig} FullWallabyConfig\r\n * Full Wallaby config.\r\n */\r\n/**\r\n *\r\n * @param {IWallaby} wallaby\r\n * @returns {FullWallabyConfig}\r\n */\r\nmodule.exports = function (wallaby) {\r\n  return {\r\n    autoDetect: true,\r\n    compilers: {\r\n      '**/*.ts?(x)': wallaby.compilers?.typeScript({\r\n        module: 'commonjs',\r\n        jsx: 'React',\r\n      }),\r\n    },\r\n  };\r\n};\r\n\r\n\r\n```\r\n\r\nWhen I add the {@link} when the compiler is already running, I get the following stack trace:\r\n\r\n```\r\n/my-project/node_modules/typescript/lib/typescript.js:110417\r\n                throw e;\r\n                ^\r\n\r\nTypeError: Cannot read property 'text' of undefined\r\n    at getSourceTextOfNodeFromSourceFile (/my-project/node_modules/typescript/lib/typescript.js:14134:55)\r\n    at getTextOfNode (/my-project/node_modules/typescript/lib/typescript.js:14159:16)\r\n    at Object.entityNameToString (/my-project/node_modules/typescript/lib/typescript.js:14590:69)\r\n    at /my-project/node_modules/typescript/lib/typescript.js:12631:91\r\n    at Array.map (<anonymous>)\r\n    at Object.getTextOfJSDocComment (/my-project/node_modules/typescript/lib/typescript.js:12630:73)\r\n    at serializeTypeAlias (/my-project/node_modules/typescript/lib/typescript.js:50923:42)\r\n    at serializeSymbolWorker (/my-project/node_modules/typescript/lib/typescript.js:50734:25)\r\n    at serializeSymbol (/my-project/node_modules/typescript/lib/typescript.js:50694:38)\r\n    at /my-project/node_modules/typescript/lib/typescript.js:50669:25\r\nerror Command failed with exit code 1.\r\n```\r\n\r\n- ts:        v4.3.5\r\n- node:   v16.4.2",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45246",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45246/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45246/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45246/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45246",
      "id": 956593169,
      "node_id": "MDU6SXNzdWU5NTY1OTMxNjk=",
      "number": 45246,
      "title": "module is cjs and allowSyntheticDefaultImports is set to true, the \"default\" is still output",
      "user": {
        "login": "ProfBramble",
        "id": 48615696,
        "node_id": "MDQ6VXNlcjQ4NjE1Njk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/48615696?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProfBramble",
        "html_url": "https://github.com/ProfBramble",
        "followers_url": "https://api.github.com/users/ProfBramble/followers",
        "following_url": "https://api.github.com/users/ProfBramble/following{/other_user}",
        "gists_url": "https://api.github.com/users/ProfBramble/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ProfBramble/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ProfBramble/subscriptions",
        "organizations_url": "https://api.github.com/users/ProfBramble/orgs",
        "repos_url": "https://api.github.com/users/ProfBramble/repos",
        "events_url": "https://api.github.com/users/ProfBramble/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ProfBramble/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971558,
          "node_id": "MDU6TGFiZWwxMTM5NzE1NTg=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Question",
          "name": "Question",
          "color": "d4c5f9",
          "default": false,
          "description": "An issue which isn't directly actionable in code"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-07-30T09:53:46Z",
      "updated_at": "2021-07-31T05:52:31Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\nallowSyntheticDefaultImports\r\ncommonjs\r\ncjs\r\ndefault\r\n\r\n### üïó Version & Regression Information\r\n\r\ntypescript 3.8.2\r\nnode 12.18.0\r\n\r\n### ‚èØ Playground Link\r\n\r\n### üíª Code\r\n\r\n```\r\n// source code\r\nimport React from 'react'\r\n\r\nexport default function Circle (props) {\r\n    const { ...other } = props;\r\n    return (\r\n        <div\r\n            {...other}\r\n        >\r\n            {props.children || ''}\r\n        </div>\r\n    )\r\n}\r\n\r\n// tsconfig\r\n{\r\n      \"compilerOptions\": {\r\n        \"outDir\": \"./lib/\",\r\n        \"module\": \"commonjs\",\r\n        \"target\": \"es5\",\r\n        \"declaration\": true,\r\n        \"jsx\": \"react\",\r\n        \"moduleResolution\": \"Node\",\r\n        \"keyofStringsOnly\": true,\r\n        \"allowSyntheticDefaultImports\": true,\r\n        \"experimentalDecorators\": true\r\n      },\r\n      \"include\": [\r\n        \"src/components\"\r\n      ],\r\n      \"exclude\": [\r\n        \"node_modules\",\r\n        \"build\",\r\n        \"scripts\",\r\n        \"**/__tests__/*.test.tsx\",\r\n      ]\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\n```\r\nfunction Circle(props) {\r\n   // Some non-critical output\r\n    return (react_1.default.createElement(\"div\", __assign({}, other, { className: classes }), props.children || ''));\r\n}\r\n```\r\n\r\n### üôÇ Expected behavior\r\n\r\nThe output at this time should point to React.createElement, **but if the output target is es module, this problem will not occur**\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45245",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45245/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45245/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45245/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/45245",
      "id": 956498947,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NzAwMDg0Nzg4",
      "number": 45245,
      "title": "fix(45192): Implement interface only working after specifying import",
      "user": {
        "login": "a-tarasyuk",
        "id": 509265,
        "node_id": "MDQ6VXNlcjUwOTI2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/509265?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/a-tarasyuk",
        "html_url": "https://github.com/a-tarasyuk",
        "followers_url": "https://api.github.com/users/a-tarasyuk/followers",
        "following_url": "https://api.github.com/users/a-tarasyuk/following{/other_user}",
        "gists_url": "https://api.github.com/users/a-tarasyuk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/a-tarasyuk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/a-tarasyuk/subscriptions",
        "organizations_url": "https://api.github.com/users/a-tarasyuk/orgs",
        "repos_url": "https://api.github.com/users/a-tarasyuk/repos",
        "events_url": "https://api.github.com/users/a-tarasyuk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/a-tarasyuk/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1820418576,
          "node_id": "MDU6TGFiZWwxODIwNDE4NTc2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug",
          "name": "For Milestone Bug",
          "color": "001f77",
          "default": false,
          "description": "PRs that fix a bug with a specific milestone"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "armanio123",
        "id": 13305542,
        "node_id": "MDQ6VXNlcjEzMzA1NTQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/13305542?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/armanio123",
        "html_url": "https://github.com/armanio123",
        "followers_url": "https://api.github.com/users/armanio123/followers",
        "following_url": "https://api.github.com/users/armanio123/following{/other_user}",
        "gists_url": "https://api.github.com/users/armanio123/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/armanio123/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/armanio123/subscriptions",
        "organizations_url": "https://api.github.com/users/armanio123/orgs",
        "repos_url": "https://api.github.com/users/armanio123/repos",
        "events_url": "https://api.github.com/users/armanio123/events{/privacy}",
        "received_events_url": "https://api.github.com/users/armanio123/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "armanio123",
          "id": 13305542,
          "node_id": "MDQ6VXNlcjEzMzA1NTQy",
          "avatar_url": "https://avatars.githubusercontent.com/u/13305542?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/armanio123",
          "html_url": "https://github.com/armanio123",
          "followers_url": "https://api.github.com/users/armanio123/followers",
          "following_url": "https://api.github.com/users/armanio123/following{/other_user}",
          "gists_url": "https://api.github.com/users/armanio123/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/armanio123/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/armanio123/subscriptions",
          "organizations_url": "https://api.github.com/users/armanio123/orgs",
          "repos_url": "https://api.github.com/users/armanio123/repos",
          "events_url": "https://api.github.com/users/armanio123/events{/privacy}",
          "received_events_url": "https://api.github.com/users/armanio123/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-30T07:52:40Z",
      "updated_at": "2021-07-30T07:52:57Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/45245",
        "html_url": "https://github.com/microsoft/TypeScript/pull/45245",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/45245.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/45245.patch"
      },
      "body": "Fixes #45192",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45244",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45244/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45244/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45244/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45244",
      "id": 956352939,
      "node_id": "MDU6SXNzdWU5NTYzNTI5Mzk=",
      "number": 45244,
      "title": "compiler to es5, runtime cant throw the error which if compiler to es6",
      "user": {
        "login": "nokisnojok",
        "id": 19647275,
        "node_id": "MDQ6VXNlcjE5NjQ3Mjc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/19647275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nokisnojok",
        "html_url": "https://github.com/nokisnojok",
        "followers_url": "https://api.github.com/users/nokisnojok/followers",
        "following_url": "https://api.github.com/users/nokisnojok/following{/other_user}",
        "gists_url": "https://api.github.com/users/nokisnojok/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nokisnojok/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nokisnojok/subscriptions",
        "organizations_url": "https://api.github.com/users/nokisnojok/orgs",
        "repos_url": "https://api.github.com/users/nokisnojok/repos",
        "events_url": "https://api.github.com/users/nokisnojok/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nokisnojok/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-30T02:50:57Z",
      "updated_at": "2021-07-30T02:50:57Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\niterator __spreadArray\r\n\r\n### üïó Version & Regression Information\r\n\r\ntypescript 4.2.4\r\nnode 14.16.1\r\n### ‚èØ Playground Link\r\n\r\n### üíª Code\r\n\r\n```ts\r\n// source code\r\nfunction fn(v: any) {\r\n    const arr = [];\r\n    arr.push(...v);\r\n    return arr;\r\n}\r\nconsole.log(fn({}))\r\n// tsconfig1\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"commonjs\",\r\n        \"declaration\": false,\r\n        \"noImplicitAny\": false,\r\n        \"noUnusedLocals\": false,\r\n        \"removeComments\": true,\r\n        \"noLib\": false,\r\n        \"emitDecoratorMetadata\": true,\r\n        \"experimentalDecorators\": true,\r\n        \"target\": \"es5\",\r\n        \"sourceMap\": true,\r\n        \"allowJs\": true,\r\n        \"outDir\": \"dist\",\r\n        \"downlevelIteration\": true,\r\n        \"lib\": [\r\n            \"es2017\",\r\n            \"esnext\",\r\n            \"dom\",\r\n            \"dom.iterable\"\r\n        ],\r\n        \"esModuleInterop\": true\r\n    },\r\n    \"include\": [\r\n        \"src/**/*\"\r\n    ],\r\n    \"exclude\": [\r\n        \"node_modules\"\r\n    ]\r\n}\r\n// tsconfig2\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"commonjs\",\r\n        \"declaration\": false,\r\n        \"noImplicitAny\": false,\r\n        \"noUnusedLocals\": false,\r\n        \"removeComments\": true,\r\n        \"noLib\": false,\r\n        \"emitDecoratorMetadata\": true,\r\n        \"experimentalDecorators\": true,\r\n        \"target\": \"es6\",\r\n        \"sourceMap\": true,\r\n        \"allowJs\": true,\r\n        \"outDir\": \"dist\",\r\n        \"downlevelIteration\": true,\r\n        \"lib\": [\r\n            \"es2017\",\r\n            \"esnext\",\r\n            \"dom\",\r\n            \"dom.iterable\"\r\n        ],\r\n        \"esModuleInterop\": true\r\n    },\r\n    \"include\": [\r\n        \"src/**/*\"\r\n    ],\r\n    \"exclude\": [\r\n        \"node_modules\"\r\n    ]\r\n}\r\n```\r\n\r\n### üôÅ Actual behavior\r\nif use config1\r\n// log\r\n[]\r\n\r\nif use config2\r\nTypeError: Found non-callable @@iterator\r\n\r\n### üôÇ Expected behavior\r\n\r\nEither config1 or config2\r\n// log\r\nTypeError: Found non-callable @@iterator\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45243",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45243/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45243/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45243/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45243",
      "id": 956338689,
      "node_id": "MDU6SXNzdWU5NTYzMzg2ODk=",
      "number": 45243,
      "title": "Compiler allows to pass readonly object to function as non-readonly parameter",
      "user": {
        "login": "ilyub",
        "id": 70687432,
        "node_id": "MDQ6VXNlcjcwNjg3NDMy",
        "avatar_url": "https://avatars.githubusercontent.com/u/70687432?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ilyub",
        "html_url": "https://github.com/ilyub",
        "followers_url": "https://api.github.com/users/ilyub/followers",
        "following_url": "https://api.github.com/users/ilyub/following{/other_user}",
        "gists_url": "https://api.github.com/users/ilyub/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ilyub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ilyub/subscriptions",
        "organizations_url": "https://api.github.com/users/ilyub/orgs",
        "repos_url": "https://api.github.com/users/ilyub/repos",
        "events_url": "https://api.github.com/users/ilyub/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ilyub/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-30T02:13:55Z",
      "updated_at": "2021-07-30T08:20:27Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\nCompiler allows to pass readonly object to function as non-readonly parameter\r\n\r\n### üïó Version & Regression Information\r\n\r\n4.3.5\r\n\r\n### ‚èØ Playground Link\r\n\r\nhttps://www.typescriptlang.org/play?#code/MYewdgzgLgBAhgLhgJwKZwCbgDYE8ZgCuAtgEarIDaAujALww0DcAUC6JLKUgN4rpYweGADc42QqiREyFGAF96MPmIlSYARgWsWAM0JhgUAJbgYugBQAPaSXJVqAGhi5eo8ZNuzkCgJRIREGMMZXk2SzhnUl8mIA\r\n\r\n### üíª Code\r\n\r\n```ts\r\nconst a: readonly number[] = [];\r\n\r\nconst b: { readonly value: number } = { value: 1 };\r\n\r\nfunction f(x: number[], y: { value: number }): void {}\r\n\r\nf(a, b);\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nShows error for the first parameter, but not for the second.\r\n\r\n### üôÇ Expected behavior\r\n\r\nShould show error for both parameters.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45241",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45241/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45241/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45241/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45241",
      "id": 956213533,
      "node_id": "MDU6SXNzdWU5NTYyMTM1MzM=",
      "number": 45241,
      "title": "Auto-import only works after first usage (typescript)",
      "user": {
        "login": "matuella",
        "id": 13678134,
        "node_id": "MDQ6VXNlcjEzNjc4MTM0",
        "avatar_url": "https://avatars.githubusercontent.com/u/13678134?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matuella",
        "html_url": "https://github.com/matuella",
        "followers_url": "https://api.github.com/users/matuella/followers",
        "following_url": "https://api.github.com/users/matuella/following{/other_user}",
        "gists_url": "https://api.github.com/users/matuella/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matuella/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matuella/subscriptions",
        "organizations_url": "https://api.github.com/users/matuella/orgs",
        "repos_url": "https://api.github.com/users/matuella/repos",
        "events_url": "https://api.github.com/users/matuella/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matuella/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971304,
          "node_id": "MDU6TGFiZWwxMTM5NzEzMDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20More%20Info",
          "name": "Needs More Info",
          "color": "556b75",
          "default": false,
          "description": "The issue still hasn't been fully clarified"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-07-29T20:07:21Z",
      "updated_at": "2021-07-29T23:55:40Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Issue Type: <b>Bug</b>\r\n\r\n1. Create a `tsconfig.json` and two different `.ts` files;\r\n2. Install any dependency in `package.json` (with types);\r\n3. Type any export from the imported dependency.\r\n\r\n\r\nhttps://user-images.githubusercontent.com/13678134/127558474-4eae17a1-cefe-4995-8c2e-3553f9a3910c.mov\r\n\r\n\r\nWhat occurs is that the auto-import suggestion only appears after another file has imported it at least once.\r\n\r\nRepository used for the example above: https://github.com/matuella/vscode-not-auto-importing-ts. Check out `bar.ts` and read the comments to reproduce the example above.\r\n\r\n---\r\n\r\nVS Code version: Code 1.58.2 (c3f126316369cd610563c75b1b1725e0679adfb3, 2021-07-14T22:09:06.581Z)\r\nOS version: Darwin x64 20.5.0\r\nRestricted Mode: No\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i3-8100B CPU @ 3.60GHz (4 x 3600)|\r\n|GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|4, 7, 6|\r\n|Memory (System)|8.00GB (0.09GB free)|\r\n|Process Argv|--crash-reporter-id 32ce4aa0-96f9-4da3-b669-e94f6c993aaf|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details>Extensions: none<details>\r\n<summary>A/B Experiments</summary>\r\n\r\n```\r\nvsliv368:30146709\r\nvsreu685:30147344\r\npython383cf:30185419\r\npythonvspyt700cf:30270857\r\npythonvspyt602:30300191\r\nvspor879:30202332\r\nvspor708:30202333\r\nvspor363:30204092\r\npythonvspyt639:30300192\r\npythontb:30283811\r\npythonvspyt551cf:30311713\r\nvspre833:30321513\r\npythonptprofiler:30281270\r\nvshan820:30294714\r\nvstes263cf:30335440\r\nvscoreces:30322571\r\npythondataviewer:30285071\r\nvscus158:30321503\r\npythonvsuse255:30340121\r\nvscod805:30301674\r\npythonvspyt200:30340761\r\nvscextlang:30333561\r\nbinariesv615:30325510\r\npythonvssor306:30344512\r\nbridge0708:30335490\r\n\r\n```\r\n\r\n</details>\r\n\r\n<!-- generated by issue reporter -->",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45237",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45237/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45237/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45237/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45237",
      "id": 955922704,
      "node_id": "MDU6SXNzdWU5NTU5MjI3MDQ=",
      "number": 45237,
      "title": "Record<string, unknown> extends type but not interface",
      "user": {
        "login": "brianconnoly",
        "id": 576653,
        "node_id": "MDQ6VXNlcjU3NjY1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/576653?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brianconnoly",
        "html_url": "https://github.com/brianconnoly",
        "followers_url": "https://api.github.com/users/brianconnoly/followers",
        "following_url": "https://api.github.com/users/brianconnoly/following{/other_user}",
        "gists_url": "https://api.github.com/users/brianconnoly/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brianconnoly/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brianconnoly/subscriptions",
        "organizations_url": "https://api.github.com/users/brianconnoly/orgs",
        "repos_url": "https://api.github.com/users/brianconnoly/repos",
        "events_url": "https://api.github.com/users/brianconnoly/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brianconnoly/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-29T14:49:19Z",
      "updated_at": "2021-07-29T15:00:22Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\nRecord with unknown extending type works but interface doesnt\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This changed between versions 3.3 and 3.5\r\n\r\n### ‚èØ Playground Link\r\n\r\n\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?ts=4.3.5#code/JYOwLgpgTgZghgYwgAgIIAdjIN4ChkHJQQCOArhAM5gBcyAShAgPZQAmAPNVKAOYA0yMiADWIZgHcQAPmQAfZADdmwNgG58hYpXTMQlCHUYt2XMDxACho8VNkLlqjQF9cuUJFiIUAcQghoYAQOVGQIAA9IEDZKNExZPEJkSGo6VBc3D2h4JGQASQAVKjBGcmKcTQI4AH46bj4NJIAjWuQQMgBbJugM3DAAT3QUAqLqUopqZABeCqSauvMGyuQWunauntxnDXdwbO9kUbA8va9cxK1SCdp8o-HixsudPQM6R3Ut3c8c4eKCwZQFwIxDKqUOdyuD2W2l0+kMShUH1cfQByD8AWIbAAjNM0f5AsEjidvt5pDsBkM8RiIGwAEy49EEjhHf5DMlAA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\ninterface Api {\r\n    request: Record<string, unknown> | void;\r\n    response: Record<string, unknown> | void;\r\n}\r\n\r\ninterface Generic<A extends Api> {\r\n    test: A;\r\n}\r\n\r\ninterface ITestRequest {\r\n    a?: string;\r\n    b?: number;\r\n}\r\n\r\ntype TTestRequest = {\r\n    a?: string;\r\n    b?: number;\r\n};\r\n\r\ninterface TestInterface {\r\n    request: ITestRequest;\r\n    response: void;\r\n}\r\ninterface TestType {\r\n    request: TTestRequest;\r\n    response: void;\r\n}\r\n\r\n// This doesnt work\r\ntype Genered1 = Generic<TestInterface>;\r\n\r\n// But this does\r\ntype Genered2 = Generic<TestType>;\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nITestRequest fails to extend Record<string, unknown>\r\n\r\n<!-- What happened, and why it was wrong -->\r\n\r\n### üôÇ Expected behavior\r\n\r\nITestRequest works as TTestRequest and can be passed under signature Record<string, unknown>\r\n\r\n<!-- What you expected to happen instead, and why -->\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45236",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45236/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45236/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45236/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45236",
      "id": 955867754,
      "node_id": "MDU6SXNzdWU5NTU4Njc3NTQ=",
      "number": 45236,
      "title": "Generating JS Code variable names as if were declarations. which are not possible parse/import js into react or compile",
      "user": {
        "login": "wesleyolis",
        "id": 2478837,
        "node_id": "MDQ6VXNlcjI0Nzg4Mzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2478837?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wesleyolis",
        "html_url": "https://github.com/wesleyolis",
        "followers_url": "https://api.github.com/users/wesleyolis/followers",
        "following_url": "https://api.github.com/users/wesleyolis/following{/other_user}",
        "gists_url": "https://api.github.com/users/wesleyolis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wesleyolis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wesleyolis/subscriptions",
        "organizations_url": "https://api.github.com/users/wesleyolis/orgs",
        "repos_url": "https://api.github.com/users/wesleyolis/repos",
        "events_url": "https://api.github.com/users/wesleyolis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wesleyolis/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971558,
          "node_id": "MDU6TGFiZWwxMTM5NzE1NTg=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Question",
          "name": "Question",
          "color": "d4c5f9",
          "default": false,
          "description": "An issue which isn't directly actionable in code"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-07-29T13:52:52Z",
      "updated_at": "2021-07-29T15:42:37Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\nVariants of this: [ts compile] generating js ([variable names] [declarations ])\r\n\r\n### üïó Version & Regression Information\r\nIntroduce after version 4.2.4 by the looks of it, version 4.3.2 features the bug.\r\nnt-bugs\r\nThis issue also exists in the latest Nightly build, sorry.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This changed between versions 4.2.4 and 4.3.2, there was no 4.3.1 to install.\r\n\r\n**1-Input**\r\n```ts\r\nimport * as axios from 'axios'; //\"version\": \"0.18.0\"\r\n\r\nexport class IResponseError extends Error {\r\n\r\n    constructor(message:string, public axiosResponse:axios.AxiosResponse<any>) {\r\n\r\n        super(message);\r\n    }\r\n}\r\n```\r\n\r\n1-Output\r\n```.js\r\n class IResponseError extends Error {\r\n     axiosResponse; //** random line of generated code, which stops imports into react and things, it shouldn't be here\r\n     constructor(message, axiosResponse) {\r\n         super(message);\r\n\r\n```\r\n\r\n\r\n**2-Input**\r\n\r\n ```.ts\r\n\r\nexport class GatewayConfigAPI {\r\n\r\n    constructor(private endpoint: string) {        \r\n\r\n        this.endpoint = endpoint.substring(0, endpoint.length - 1);\r\n    }\r\n}\r\n```\r\n\r\n2-Output\r\n\r\n```.js {\r\nModule parse failed: Unexpected token (54:12)\r\nYou may need an appropriate loader to handle this file type.\r\n  | })(IGatewayConfigController = exports.IGatewayConfigController || (exports.IGatewayConfigController = {}));\r\n  | class GatewayConfigAPI {\r\n  |     endpoint;\t// ***************Line 54 this line should not have been generated.\r\n  |     constructor(endpoint) {\r\n  |         this.endpoint = endpoint;// unessary line\r\n  this.endpoint = endpoint.substring(0, endpoint.length - 1);\r\n}\r\n```\r\n\r\n\r\n**3 - Input:**\r\n```.ts\r\nimport {IsString, IsBoolean, ValidateNested} from 'class-validator'\r\n\r\nexport class IDONetMapsEDIConfigShare {\r\n    \r\n    @IsString()\r\n    nethost: string;\r\n\r\n    @IsString()\r\n    netshare: string;\r\n\r\n    @IsString()\r\n    username: string;\r\n\r\n    @IsString()\r\n    password: string;        \r\n}\r\n```\r\n3- Output:\r\n```.js\r\nclass IDONetMapsEDIConfigShare {\r\n    nethost;   // This shouldn't be here\r\n    netshare;  // This shouldn't be here\r\n    username;  // This shouldn't be here\r\n    password;  // This shouldn't be here\r\n}\r\n```\r\n**4-Input**\r\n\r\n```.ts\r\nexport class IDONetMapsEDIConfigResponse {\r\n\r\n    constructor(clone: INetMapsEDIServicesConfigComplete, activeStatus: string) {     \r\n        this.enabled = clone.enabled;\r\n        this.netMapsEDI = clone.netMapsEDI !== undefined ? clone.netMapsEDI : null;\r\n        this.activeStatus = activeStatus;\r\n        // look at just writting a generic class that does this, where we pick using and clone, extends, use type hack I know later.\r\n    }\r\n\r\n    @IsBoolean()\r\n    enabled:boolean;    \r\n\r\n    @IsString()\r\n    activeStatus:string;    \r\n\r\n    @ValidateNested()\r\n    //@Type(() => IDONetMapsEDIConfigShare)\r\n    netMapsEDI: IDONetMapsEDIConfigShare | null; \r\n}\r\n```\r\n4 - Output JS\r\n```.js\r\nclass IDONetMapsEDIConfigResponse {\r\n    constructor(clone, activeStatus) {\r\n        this.enabled = clone.enabled;\r\n        this.netMapsEDI = clone.netMapsEDI !== undefined ? clone.netMapsEDI : null;\r\n        this.activeStatus = activeStatus;\r\n        // look at just writting a generic class that does this, where we pick using and clone, extends, use type hack I know later.\r\n    }\r\n    enabled;// This should not be here.\r\n    activeStatus;\r\n    //@Type(() => IDONetMapsEDIConfigShare)\r\n    netMapsEDI;\r\n}\r\n\r\n```\r\n\r\n4 - Expected JS\r\n```.js\r\nclass IDONetMapsEDIConfigResponse {\r\n    constructor(clone, activeStatus) {\r\n        this.enabled = clone.enabled;\r\n        this.netMapsEDI = clone.netMapsEDI !== undefined ? clone.netMapsEDI : null;\r\n        this.activeStatus = activeStatus;\r\n        // look at just writting a generic class that does this, where we pick using and clone, extends, use type hack I know later.\r\n    }\r\n    activeStatus;\r\n    //@Type(() => IDONetMapsEDIConfigShare)\r\n    netMapsEDI;\r\n}\r\n```\r\nKind Regards,\r\n\r\nWesley Oliver",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45235",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45235/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45235/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45235/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45235",
      "id": 955862188,
      "node_id": "MDU6SXNzdWU5NTU4NjIxODg=",
      "number": 45235,
      "title": "Useless empty class fields are generated when using parameter properties and target=ESNext",
      "user": {
        "login": "angryziber",
        "id": 882016,
        "node_id": "MDQ6VXNlcjg4MjAxNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/882016?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/angryziber",
        "html_url": "https://github.com/angryziber",
        "followers_url": "https://api.github.com/users/angryziber/followers",
        "following_url": "https://api.github.com/users/angryziber/following{/other_user}",
        "gists_url": "https://api.github.com/users/angryziber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/angryziber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/angryziber/subscriptions",
        "organizations_url": "https://api.github.com/users/angryziber/orgs",
        "repos_url": "https://api.github.com/users/angryziber/repos",
        "events_url": "https://api.github.com/users/angryziber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/angryziber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113971558,
          "node_id": "MDU6TGFiZWwxMTM5NzE1NTg=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Question",
          "name": "Question",
          "color": "d4c5f9",
          "default": false,
          "description": "An issue which isn't directly actionable in code"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-07-29T13:46:51Z",
      "updated_at": "2021-07-30T05:28:59Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n```\r\n  class MenuItem {\r\n    constructor(public name: string) {}\r\n  }\r\n```\r\n\r\nCompiling this with `-t ESNext` produces:\r\n```\r\nclass MenuItem {\r\n    name;\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n}\r\n```\r\nThe name field above also confuses some next stage build tools that don't support class fields yet, e.g. the popular acorn that is used by Svelte compiler (https://github.com/sveltejs/svelte/issues/6592)\r\n\r\n\r\nHowever, compiling with `-t ES2021` produces more compact code without useless field declaration:\r\n```\r\nclass MenuItem {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n}\r\n```\r\n\r\n### üîé Search Terms\r\n\r\nconstructor shorthand \r\n\r\n### üïó Version & Regression Information\r\n\r\nVersion 4.3.5 & next\r\n- This changed between versions 4.2.x and 4.3.x\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45234",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45234/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45234/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45234/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45234",
      "id": 955797682,
      "node_id": "MDU6SXNzdWU5NTU3OTc2ODI=",
      "number": 45234,
      "title": "Contextual narrowing not narrowing on generic map.",
      "user": {
        "login": "whitneyit",
        "id": 995120,
        "node_id": "MDQ6VXNlcjk5NTEyMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/995120?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitneyit",
        "html_url": "https://github.com/whitneyit",
        "followers_url": "https://api.github.com/users/whitneyit/followers",
        "following_url": "https://api.github.com/users/whitneyit/following{/other_user}",
        "gists_url": "https://api.github.com/users/whitneyit/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/whitneyit/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/whitneyit/subscriptions",
        "organizations_url": "https://api.github.com/users/whitneyit/orgs",
        "repos_url": "https://api.github.com/users/whitneyit/repos",
        "events_url": "https://api.github.com/users/whitneyit/events{/privacy}",
        "received_events_url": "https://api.github.com/users/whitneyit/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-07-29T12:35:29Z",
      "updated_at": "2021-07-30T05:33:34Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n* [contextual narrowing](https://github.com/microsoft/TypeScript/issues?q=contextual+narrowing)\r\n* [type narrowing 4.3](https://github.com/microsoft/TypeScript/issues?q=type+narrowing+4.3)\r\n* [4.3](https://github.com/microsoft/TypeScript/issues?q=4.3)\r\n\r\n### üïó Version & Regression Information\r\n\r\n<!-- When did you start seeing this bug occur?\r\n\r\n\"Bugs\" that have existed in TS for a long time are very likely to be FAQs; refer to\r\n  https://github.com/Microsoft/TypeScript/wiki/FAQ#common-bugs-that-arent-bugs\r\n\r\nIf possible, please try testing the nightly version of TS to see if it's already been fixed.\r\nFor npm: `typescript@next`\r\nThis is also the 'Nightly' version in the playground: http://www.typescriptlang.org/play/?ts=Nightly\r\n\r\nNote: The TypeScript Playground can be used to try older versions of TypeScript.\r\n\r\nPlease keep and fill in the line that best applies:\r\n-->\r\n- This is something that I expected to work after 4.3's [Contextual Narrowing for Generics](https://devblogs.microsoft.com/typescript/announcing-typescript-4-3/#contextual-narrowing)\r\n\r\n### ‚èØ Playground Link\r\n\r\n<!--\r\n  A link to a TypeScript Playground \"Share\" link which shows this behavior\r\n\r\n  The TypeScript Workbench can be used for more complex setups, try\r\n  https://www.typescriptlang.org/dev/bug-workbench/\r\n\r\n  As a last resort, you can link to a repo, but these will be slower for us to investigate.\r\n-->\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?#code/CYUwxgNghgTiAEYD2A7AzgF3iAbiFGAKgJ4AOIAXPANYjFIBm8AIkmAK4C2+GAongQCyUUgG4AUOOBsuPAHRRgwfjwAyAS0z4QMABS4eJcgBp4+gRgCU8ALwA+eAG9x8bBdHwA9J-gAJHQgABgYEgfCa8IEqBPAAPvAAqgCS0VjxAIIo6pxQGOqoqXHwgkjsaCCF8UkopOx8FkUAYjJolfAAwkicpEho6nkFDfFyI-AAnPCcSHDwI3JF7RDqpABGSLDKFi7hTOaGZAg2R5GQ6mDUgdbOrq4hGB7e8LwAHuRgGCDAVMEWYRhI8BWCAwB0iJTKFV+83S73YUAgVCSGAA5Gh4BgABYIdhZVDwBgwLrwKBrPBybYAX3EFMsoiAA)\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\ndeclare const eventType: keyof DocumentEventMap;\r\n\r\ndocument.addEventListener(eventType, (event) => {\r\n  event; // Here `event` is `Event | UIEvent | AnimationEvent | MouseEvent | InputEvent | FocusEvent | CompositionEvent | ... 9 more ... | ClipboardEvent\r\n  if (eventType === `click`) {\r\n    event; // Expected: `event` to be type `MouseEvent`. Actual: It's the union from above.\r\n  }\r\n});\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nSecond reference of `event` is type `Event | UIEvent | AnimationEvent | MouseEvent | InputEvent | FocusEvent | CompositionEvent | ... 9 more ... | ClipboardEvent`.\r\n\r\n### üôÇ Expected behavior\r\n\r\nSecond reference of `event` to be of type `MouseEvent`.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45233",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45233/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45233/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45233/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45233",
      "id": 955738514,
      "node_id": "MDU6SXNzdWU5NTU3Mzg1MTQ=",
      "number": 45233,
      "title": "export default can not be typed via jsdoc",
      "user": {
        "login": "daKmoR",
        "id": 24378,
        "node_id": "MDQ6VXNlcjI0Mzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/24378?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/daKmoR",
        "html_url": "https://github.com/daKmoR",
        "followers_url": "https://api.github.com/users/daKmoR/followers",
        "following_url": "https://api.github.com/users/daKmoR/following{/other_user}",
        "gists_url": "https://api.github.com/users/daKmoR/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/daKmoR/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/daKmoR/subscriptions",
        "organizations_url": "https://api.github.com/users/daKmoR/orgs",
        "repos_url": "https://api.github.com/users/daKmoR/repos",
        "events_url": "https://api.github.com/users/daKmoR/events{/privacy}",
        "received_events_url": "https://api.github.com/users/daKmoR/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 117630704,
          "node_id": "MDU6TGFiZWwxMTc2MzA3MDQ=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/help%20wanted",
          "name": "help wanted",
          "color": "05ba65",
          "default": true,
          "description": "You can do this"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/29",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/29/labels",
        "id": 1973940,
        "node_id": "MDk6TWlsZXN0b25lMTk3Mzk0MA==",
        "number": 29,
        "title": "Backlog",
        "description": "",
        "creator": {
          "login": "mhegazy",
          "id": 8000722,
          "node_id": "MDQ6VXNlcjgwMDA3MjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8000722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mhegazy",
          "html_url": "https://github.com/mhegazy",
          "followers_url": "https://api.github.com/users/mhegazy/followers",
          "following_url": "https://api.github.com/users/mhegazy/following{/other_user}",
          "gists_url": "https://api.github.com/users/mhegazy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mhegazy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mhegazy/subscriptions",
          "organizations_url": "https://api.github.com/users/mhegazy/orgs",
          "repos_url": "https://api.github.com/users/mhegazy/repos",
          "events_url": "https://api.github.com/users/mhegazy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mhegazy/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 2093,
        "closed_issues": 691,
        "state": "open",
        "created_at": "2016-08-31T00:21:08Z",
        "updated_at": "2021-08-01T02:07:09Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 3,
      "created_at": "2021-07-29T11:22:47Z",
      "updated_at": "2021-07-31T16:44:28Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\n### üïó Version & Regression Information\r\n\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about jsdoc and export default\r\n\r\n### ‚èØ Playground Link\r\n\r\n\r\n```ts\r\n/**\r\n * The complete Triforce, or one or more components of the Triforce.\r\n * \r\n * @typedef {Object} WishGranter\r\n * @property {boolean} hasCourage - Indicates whether the Courage component is present.\r\n * @property {boolean} hasPower - Indicates whether the Power component is present.\r\n * @property {boolean} hasWisdom - Indicates whether the Wisdom component is present.\r\n */\r\n\r\n/** @type {WishGranter} */\r\nconst works = {\r\n  hasCourage: true,\r\n  foo: false // correctly errors\r\n}\r\n\r\n// does not work for export default\r\n\r\n/** @type {WishGranter} */\r\nexport default {\r\n  hasCourage: true,\r\n  foo: false // no error\r\n}\r\n\r\n// workaround that \"breaks\" prettier e.g. you can't format anymore as it will remove the `()`\r\n// https://github.com/prettier/prettier/issues/11279\r\n\r\n///** @type {WishGranter} */\r\n//export default ({\r\n//  // type RocketCliConfig\r\n//});\r\n```\r\n\r\n\r\n\r\n\r\n<details><summary><b>Compiler Options</b></summary>\r\n\r\n```json\r\n{\r\n  \"compilerOptions\": {\r\n    \"strict\": true,\r\n    \"noImplicitAny\": true,\r\n    \"strictFunctionTypes\": true,\r\n    \"strictPropertyInitialization\": true,\r\n    \"strictBindCallApply\": true,\r\n    \"noImplicitThis\": true,\r\n    \"noImplicitReturns\": true,\r\n    \"alwaysStrict\": true,\r\n    \"esModuleInterop\": true,\r\n    \"checkJs\": true,\r\n    \"allowJs\": true,\r\n    \"declaration\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"emitDecoratorMetadata\": true,\r\n    \"target\": \"ES2017\",\r\n    \"jsx\": \"react\",\r\n    \"module\": \"ESNext\",\r\n    \"moduleResolution\": \"node\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n</details>\r\n\r\n**Playground Link:** [Provided](https://www.typescriptlang.org/play?filetype=js#code/PQKhFgCgAIWgVAFgU2gYwPYFsAOAbZAF1XgCcBLAMw1LWQBpoamA7VZrG1TXDNlwgGcmlaIRQIK1WsgB0UWNAVwAAoQCeOZABNkogN4B5AEYArZGkIBfaAHVygxAHFSAQwHJSy6CpykMWqQa0PrGGBgE7jaIroIAwhgArm4A5qgAtNAAkiza5GiuxMIA7ijinmISCcmuaejYOHzIAtAO0H7Igs2E8jCqfgGewaHhkSzRsQAKGMUVmTl5BUXQpUQopJWo07MbPI38hK3CHV0CvYq+-oHDYRHIUdAxgvaC2tjQ87n5hZ0rZeubOwON5Yeq8A5HdqkTrdc4gYBQKCgVQaLQhF7ONweUg2eFQTAsQSHYo0ADWwgAvCEFI9YtVUsgAFxiUiJBg06gYZmUVx4LrQYDAeqkaGWPDqaCefykQRQKyIyCC6BvX4sDDEsnQaSSgAejSCyr0rkSeEICuRPlRqH0GJc7mIONgCMgyD1NEOuh5JsO+hpT3ptSZLLZ9A54W5vP5SrVkpFNDl5qFJNIpNc-kSuUqhWgACJjNDXOSc1CiIRyBU5ClZNB1El0O4AOSHaRYbPudScaHQWKtYnkPB4aDQzgAN1Q5WgAAMABQASknSKFiEIhBwgkZgpS5HEiWMsh4wA6K-LpEP0OPnmADkEbMEwAAjPeAEwAdgAnImLWpNNbbViHbizqCq6+oeka3rQNOvqKkKApCla0AAEoYGgpJEHEeDkAkLCUOQKSLlYs4ANxAA)\r\n      \r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```ts\r\n/** @type {import('rocket/cli').RocketCliConfig} */\r\nexport default {\r\n  // \"no\" type - e.g. any\r\n} \r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nIt does not put any type for export default.\r\n\r\n### üôÇ Expected behavior\r\n\r\n```ts\r\n/** @type {import('rocket/cli').RocketCliConfig} */\r\nexport default {\r\n  // type RocketCliConfig\r\n} \r\n```\r\n\r\n### üòÖ  Workaround\r\n\r\nA possible workaround is to typecast via `()` but that \"breaks\" prettier as it will always remove it as \"usless\" brackets.\r\nSee https://github.com/prettier/prettier/issues/11279\r\n\r\n```ts\r\n/** @type {import('rocket/cli').RocketCliConfig} */\r\nexport default ({\r\n  // type RocketCliConfig\r\n})\r\n```",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45232",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45232/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45232/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45232/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45232",
      "id": 955611529,
      "node_id": "MDU6SXNzdWU5NTU2MTE1Mjk=",
      "number": 45232,
      "title": "TSServer unable to load plugin from a local directory",
      "user": {
        "login": "bstaletic",
        "id": 7791699,
        "node_id": "MDQ6VXNlcjc3OTE2OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7791699?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bstaletic",
        "html_url": "https://github.com/bstaletic",
        "followers_url": "https://api.github.com/users/bstaletic/followers",
        "following_url": "https://api.github.com/users/bstaletic/following{/other_user}",
        "gists_url": "https://api.github.com/users/bstaletic/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bstaletic/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bstaletic/subscriptions",
        "organizations_url": "https://api.github.com/users/bstaletic/orgs",
        "repos_url": "https://api.github.com/users/bstaletic/repos",
        "events_url": "https://api.github.com/users/bstaletic/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bstaletic/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-29T08:49:44Z",
      "updated_at": "2021-07-29T08:49:44Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n<!--\r\n  Please fill in each section completely. Thank you!\r\n-->\r\n\r\n### üîé Search Terms\r\n\r\n<!--\r\n  What search terms did you use when trying to find an existing bug report?\r\n  List them here so people in the future can find this one more easily.\r\n-->\r\n\r\nplugin tsserver relative path\r\n\r\n### üïó Version & Regression Information\r\n\r\nThis was reported to me here: https://github.com/ycm-core/YouCompleteMe/issues/3924\r\n\r\nThe gist is that @FuDesign2008 wanted to use [this plugin](https://github.com/mrmckeb/typescript-plugin-css-modules) with vim/YCM/TSServer.\r\n\r\n- YCM, by default, installs TSServer in a local directory, somewhere in `~/.vim/`.\r\n- The user's plugin is installed inside `node_modules`, in user's project.\r\n- TSServer, according to [the log](https://github.com/FuDesign2008/example-app/blob/master/ycm-logs/tsserver_xjmmtz1k.log#L48) searches for plugins in its directory and all parent directories.\r\n- As a result, TSServer fails to find the plugin.\r\n- According to [this wiki page](https://github.com/microsoft/TypeScript/wiki/Writing-a-Language-Service-Plugin#testing-locally) relative paths for module names should work.\r\n  - Yet, when I tried to specify a relative path, TSServer complained that:\r\n\r\n&nbsp;\r\n\r\n    Info 19   [10:43:12.331] Skipped loading plugin ./node_modules/typescript-plugin-css-modules because only package name is allowed plugin name\r\n\r\n\r\n### ‚èØ Playground Link\r\n\r\nSorry, I don't have one.\r\n\r\n### üíª Code\r\n\r\n<!-- Please post the relevant code sample here as well-->\r\n```json\r\n{\r\n  \"compilerOptions\": {\r\n    \"plugins\": [\r\n      {\r\n        \"name\": \"typescript-plugin-css-modules\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n```json\r\n{\r\n  \"dependencies\": {\r\n    \"typescript-plugin-css-modules\": \"*\"\r\n  }\r\n}\r\n```\r\n### üôÅ Actual behavior\r\n\r\n<!-- What happened, and why it was wrong -->\r\n\r\nTSServer failed to find the plugin.\r\n\r\n### üôÇ Expected behavior\r\n\r\n<!-- What you expected to happen instead, and why -->\r\n\r\nTSServer should have found the plugin in the local `node_modules`.\r\n\r\n### Workarounds\r\n\r\n1. Installing the TSServer plugin in `~/.vim/path/to/tsserver/node_modules/` worked.\r\n2. Installing the TSServer itself in the local `node_modules` and telling YCM to use that one also worked.\r\n\r\nBoth seem less than idea, especially considering that [the wiki](https://github.com/microsoft/TypeScript/wiki/Writing-a-Language-Service-Plugin) says the user's expectations should work.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45230",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45230/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45230/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45230/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45230",
      "id": 955553121,
      "node_id": "MDU6SXNzdWU5NTU1NTMxMjE=",
      "number": 45230,
      "title": "Partially overlapping union discriminators are not assignable from a union of discriminating values",
      "user": {
        "login": "ammut",
        "id": 18117535,
        "node_id": "MDQ6VXNlcjE4MTE3NTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/18117535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ammut",
        "html_url": "https://github.com/ammut",
        "followers_url": "https://api.github.com/users/ammut/followers",
        "following_url": "https://api.github.com/users/ammut/following{/other_user}",
        "gists_url": "https://api.github.com/users/ammut/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ammut/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ammut/subscriptions",
        "organizations_url": "https://api.github.com/users/ammut/orgs",
        "repos_url": "https://api.github.com/users/ammut/repos",
        "events_url": "https://api.github.com/users/ammut/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ammut/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 611777722,
          "node_id": "MDU6TGFiZWw2MTE3Nzc3MjI=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Needs%20Investigation",
          "name": "Needs Investigation",
          "color": "DDDDDD",
          "default": false,
          "description": "This issue needs a team member to investigate its status."
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rbuckton",
        "id": 3902892,
        "node_id": "MDQ6VXNlcjM5MDI4OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3902892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rbuckton",
        "html_url": "https://github.com/rbuckton",
        "followers_url": "https://api.github.com/users/rbuckton/followers",
        "following_url": "https://api.github.com/users/rbuckton/following{/other_user}",
        "gists_url": "https://api.github.com/users/rbuckton/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rbuckton/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rbuckton/subscriptions",
        "organizations_url": "https://api.github.com/users/rbuckton/orgs",
        "repos_url": "https://api.github.com/users/rbuckton/repos",
        "events_url": "https://api.github.com/users/rbuckton/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rbuckton/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "rbuckton",
          "id": 3902892,
          "node_id": "MDQ6VXNlcjM5MDI4OTI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3902892?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rbuckton",
          "html_url": "https://github.com/rbuckton",
          "followers_url": "https://api.github.com/users/rbuckton/followers",
          "following_url": "https://api.github.com/users/rbuckton/following{/other_user}",
          "gists_url": "https://api.github.com/users/rbuckton/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rbuckton/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rbuckton/subscriptions",
          "organizations_url": "https://api.github.com/users/rbuckton/orgs",
          "repos_url": "https://api.github.com/users/rbuckton/repos",
          "events_url": "https://api.github.com/users/rbuckton/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rbuckton/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/milestones/147",
        "html_url": "https://github.com/microsoft/TypeScript/milestone/147",
        "labels_url": "https://api.github.com/repos/microsoft/TypeScript/milestones/147/labels",
        "id": 6886413,
        "node_id": "MDk6TWlsZXN0b25lNjg4NjQxMw==",
        "number": 147,
        "title": "TypeScript 4.5.0",
        "description": "",
        "creator": {
          "login": "RyanCavanaugh",
          "id": 6685088,
          "node_id": "MDQ6VXNlcjY2ODUwODg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6685088?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/RyanCavanaugh",
          "html_url": "https://github.com/RyanCavanaugh",
          "followers_url": "https://api.github.com/users/RyanCavanaugh/followers",
          "following_url": "https://api.github.com/users/RyanCavanaugh/following{/other_user}",
          "gists_url": "https://api.github.com/users/RyanCavanaugh/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/RyanCavanaugh/subscriptions",
          "organizations_url": "https://api.github.com/users/RyanCavanaugh/orgs",
          "repos_url": "https://api.github.com/users/RyanCavanaugh/repos",
          "events_url": "https://api.github.com/users/RyanCavanaugh/events{/privacy}",
          "received_events_url": "https://api.github.com/users/RyanCavanaugh/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 24,
        "closed_issues": 7,
        "state": "open",
        "created_at": "2021-06-24T19:57:11Z",
        "updated_at": "2021-07-29T15:39:41Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2021-07-29T07:38:21Z",
      "updated_at": "2021-07-29T15:39:41Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "# Bug Report\r\n\r\n### üîé Search Terms\r\n\r\ntagged, discriminated, union, partially, overlapping, infinite, types, not, assignable\r\n\r\n### üïó Version & Regression Information\r\n\r\n- This is the behavior in every version I tried, and I reviewed the FAQ for entries about Type system behavior and Classes\r\n\r\nI tried versions from v3.3.3 to v4.3.5, as those were available in the Playground at this time.\r\n\r\nNote that between v3.3.3 and v3.5.1 something changed that affects type `C` from my example below. In v3.3.3 the assignment to `const c: C` is an error, from v3.5.1 its okay.\r\n\r\n### ‚èØ Playground Link\r\n\r\n[Playground link with relevant code](https://www.typescriptlang.org/play?#code/PTAEHkCcEsHNoHYEMA2oAKkD2AjFBTAWwC4AoAFwE8AHfUAQVAF5QBvUJa7a40AciR9QAH1AAlfLACiAD2qgAviLYcuWHvxxDRE6XMUBuUgBN8AYxRJIdM1gQBncqu68B2zXyO2HTpL0Ys7JzchqAgoPiQ2JCkpOEAItCO0CiW5NB2ZFS0oABCzCo4ahoAjMqOMAiwisrsRS6gAEzl5JXVCibmltag3o6g9eq8ZaKNXnb9OLz5gQPFNeH2SIR0kdGx4WtYkKq0VvagdiiUoABm26AARIiniNDk+Jeg2fj2ADTPABZJoADu2wBrA63BD4Cg0OgAYQK7DMxWGygAzDVRLD4U0kYpOhYrDYJk44Q0Rk1xj5erxobNCeoFmBIQBtPjU6h8AC6zBYxOaokRGzAhG2dFM5CQKXwxgiMmW1AI4JyAEkECD7nQWBVELAjC9QPEYaBjOjiYrlQ8USoDQ1uaBjXdTR1tfF5ix4oyLeo2QYwmAuS02qAALQAPiuK0g8CqT3s+CIB3IWD+gN622sZnIx2x3TxZLdpWUY1IfScxhKvF1sxzCKU4XAAGkC-j9Y1S3qKxiq2Ba-Xs4jm+X5u2IlFtqQgA)\r\n\r\n### üíª Code\r\n\r\n```ts\r\n// Original Problem:\r\ntype A = { aprop: 'a' | RegExp } | { aprop: 'b' | RegExp };\r\ndeclare const aprop: 'a' | 'b';\r\nconst a: A = { aprop }; // error\r\n\r\n// Distillation:\r\ntype B = { bprop: 1 | string } | { bprop: 2 | string }\r\ndeclare const bprop: 1 | 2;\r\nconst b: B = { bprop } // same error\r\n\r\n// error appears only for \"infinite\" types, this works fine\r\ntype C = { cprop: 1 | 3 } | { cprop: 2 | 3 }\r\ndeclare const cprop: 1 | 2;\r\nconst c: C = { cprop } // C['cprop'] == 1 | 2 | 3\r\n\r\n// more detailed example\r\ntype Infinite = string;\r\ntype D = { dprop: 1 | Infinite } | { dprop: 2 | Infinite }\r\ntype Dprop = D['dprop']; // 1 | 2 | string -> \"merging\" seems to work correctly\r\ndeclare const dprop: 1 | 2;\r\nconst d1: D = { dprop: 1 } // OK\r\nconst d2: D = { dprop: 2 } // OK\r\nconst d3: D = { dprop } // error\r\n```\r\n\r\n### üôÅ Actual behavior\r\n\r\nThe assignments to `const a: A`, `const b: B`, and `const d3: D` raise an error.\r\n\r\n### üôÇ Expected behavior\r\n\r\nAs demonstrated in the assignments to `const d1: D` and `const d2: D`, my partially discriminating property `dprop` can be either of the two discriminating values. So It should be possible to assign to `dprop` a value that is either of them, as in the assignment to `const d3: D`.\r\n",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45229",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45229/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45229/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45229/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/45229",
      "id": 955550066,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njk5Mjg0NTI1",
      "number": 45229,
      "title": "fix(45224): No inlay hints for setter parameter",
      "user": {
        "login": "a-tarasyuk",
        "id": 509265,
        "node_id": "MDQ6VXNlcjUwOTI2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/509265?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/a-tarasyuk",
        "html_url": "https://github.com/a-tarasyuk",
        "followers_url": "https://api.github.com/users/a-tarasyuk/followers",
        "following_url": "https://api.github.com/users/a-tarasyuk/following{/other_user}",
        "gists_url": "https://api.github.com/users/a-tarasyuk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/a-tarasyuk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/a-tarasyuk/subscriptions",
        "organizations_url": "https://api.github.com/users/a-tarasyuk/orgs",
        "repos_url": "https://api.github.com/users/a-tarasyuk/repos",
        "events_url": "https://api.github.com/users/a-tarasyuk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/a-tarasyuk/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1883362416,
          "node_id": "MDU6TGFiZWwxODgzMzYyNDE2",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug",
          "name": "For Uncommitted Bug",
          "color": "ededed",
          "default": false,
          "description": "PR for untriaged, rejected, closed or missing bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-07-29T07:34:18Z",
      "updated_at": "2021-07-30T18:55:40Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/45229",
        "html_url": "https://github.com/microsoft/TypeScript/pull/45229",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/45229.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/45229.patch"
      },
      "body": "Fixes #45224",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45228",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45228/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45228/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45228/events",
      "html_url": "https://github.com/microsoft/TypeScript/pull/45228",
      "id": 955497747,
      "node_id": "MDExOlB1bGxSZXF1ZXN0Njk5MjQwMDUy",
      "number": 45228,
      "title": "fix: omit inlay hints for setters",
      "user": {
        "login": "a-tarasyuk",
        "id": 509265,
        "node_id": "MDQ6VXNlcjUwOTI2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/509265?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/a-tarasyuk",
        "html_url": "https://github.com/a-tarasyuk",
        "followers_url": "https://api.github.com/users/a-tarasyuk/followers",
        "following_url": "https://api.github.com/users/a-tarasyuk/following{/other_user}",
        "gists_url": "https://api.github.com/users/a-tarasyuk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/a-tarasyuk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/a-tarasyuk/subscriptions",
        "organizations_url": "https://api.github.com/users/a-tarasyuk/orgs",
        "repos_url": "https://api.github.com/users/a-tarasyuk/repos",
        "events_url": "https://api.github.com/users/a-tarasyuk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/a-tarasyuk/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-29T06:12:23Z",
      "updated_at": "2021-07-30T18:13:36Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "pull_request": {
        "url": "https://api.github.com/repos/microsoft/TypeScript/pulls/45228",
        "html_url": "https://github.com/microsoft/TypeScript/pull/45228",
        "diff_url": "https://github.com/microsoft/TypeScript/pull/45228.diff",
        "patch_url": "https://github.com/microsoft/TypeScript/pull/45228.patch"
      },
      "body": "Fixes https://github.com/microsoft/TypeScript/issues/45210#issuecomment-888646273",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45226",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45226/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45226/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45226/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45226",
      "id": 955283333,
      "node_id": "MDU6SXNzdWU5NTUyODMzMzM=",
      "number": 45226,
      "title": "Design Meeting Notes, 7/28/2021",
      "user": {
        "login": "DanielRosenwasser",
        "id": 972891,
        "node_id": "MDQ6VXNlcjk3Mjg5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/972891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DanielRosenwasser",
        "html_url": "https://github.com/DanielRosenwasser",
        "followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
        "following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
        "organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
        "repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
        "events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 263799193,
          "node_id": "MDU6TGFiZWwyNjM3OTkxOTM=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Design%20Notes",
          "name": "Design Notes",
          "color": "bfdadc",
          "default": false,
          "description": "Notes from our design meetings"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-28T22:32:33Z",
      "updated_at": "2021-07-28T22:32:50Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "# Overriding `lib`s and `@types/web`\r\n\r\nhttps://github.com/microsoft/TypeScript/issues/44795\r\n\r\n* Underlying idea here is to take parts of the DOM API and put them into `@types`\r\n    * Have already started shipping `@types/web`.\r\n    * Enables you to avoid breaking changes around the DOM when upgrading TypeScript versions.\r\n* *But* now we need to give a way to disable the DOM types.\r\n    * You can already remove `dom` from the `lib` field in `tsconfig.json`.\r\n    * However, packages can have a `/// <reference lib=\"dom\">`\r\n* One solution is a pragma of some sort - tell the compiler \"no no, it's over here.\"\r\n* Another is a `tsconfig.json` option that overrides.\r\n* Pragma has implications\r\n    * Have to watch for its addition/removal and that can modify the current project. Means that you have to load/unload files.\r\n    * Global \"pollution\" along the same lines of \r\n    * Can do `tsconfig.json` first and then do a pragma; easy path there. Pragma is undoable.\r\n* Already have to modify the `tsconfig.json` if you need to remove the DOM - seems like you should just put all of this in the `tsconfig.json`.\r\n* Have the full picture of the world, seems like it's doable.\r\n* MSBuild context with no tsconfig?\r\n    * Can add a specific MSBuild option.\r\n* Seems like we're leaning with a tsconfig flag.\r\n* \\[\\[Bike-shedding tsconfig options]]\r\n* Big cliff in your configuration\r\n    * Everything works\r\n    * User installs `@types/web`\r\n    * \"OH NO ERRORS\" üò≠\r\n    * User removes `lib: dom`\r\n    * üòäüëç\r\n* How do we expect people to do dependency management?\r\n    * `peerDependency`?\r\n        * Really don't want people to declare it as a `dependency`.\r\n* What if someone `/// <reference types=\"web\">` or `/// <reference types=\"@types/web\">`\r\n    * Can stop people from doing it in DefinitelyTyped\r\n    * Can also give an error in TypeScript itself.\r\n* Can also use Node.js policies to override.\r\n    * https://nodejs.org/api/policy.html\r\n    * Seems confusing.\r\n    * Yarn overrides can do some of this.\r\n* Do we see people doing this beyond just `@types/web`?\r\n    * People may want their own \"strict\" version of the standard libraries.\r\n    * People may want some subset of libraries like for SES.\r\n    * Globals that conflict between libraries\r\n* Conclusions\r\n    * Ship as `tsconfig` setting first.\r\n    * Iterate on the prototype.",
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/microsoft/TypeScript/issues/45224",
      "repository_url": "https://api.github.com/repos/microsoft/TypeScript",
      "labels_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45224/labels{/name}",
      "comments_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45224/comments",
      "events_url": "https://api.github.com/repos/microsoft/TypeScript/issues/45224/events",
      "html_url": "https://github.com/microsoft/TypeScript/issues/45224",
      "id": 955265456,
      "node_id": "MDU6SXNzdWU5NTUyNjU0NTY=",
      "number": 45224,
      "title": "No inlay hints for setter parameter",
      "user": {
        "login": "DanielRosenwasser",
        "id": 972891,
        "node_id": "MDQ6VXNlcjk3Mjg5MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/972891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DanielRosenwasser",
        "html_url": "https://github.com/DanielRosenwasser",
        "followers_url": "https://api.github.com/users/DanielRosenwasser/followers",
        "following_url": "https://api.github.com/users/DanielRosenwasser/following{/other_user}",
        "gists_url": "https://api.github.com/users/DanielRosenwasser/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DanielRosenwasser/subscriptions",
        "organizations_url": "https://api.github.com/users/DanielRosenwasser/orgs",
        "repos_url": "https://api.github.com/users/DanielRosenwasser/repos",
        "events_url": "https://api.github.com/users/DanielRosenwasser/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DanielRosenwasser/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 113970366,
          "node_id": "MDU6TGFiZWwxMTM5NzAzNjY=",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": "A bug in TypeScript"
        },
        {
          "id": 3183084247,
          "node_id": "MDU6TGFiZWwzMTgzMDg0MjQ3",
          "url": "https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20Inlay%20Hints",
          "name": "Domain: Inlay Hints",
          "color": "3B7755",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-28T22:00:09Z",
      "updated_at": "2021-07-28T22:00:35Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "```ts\r\nclass Foo {\r\n    #value = 42;\r\n    get foo(): number { return this.#value; }\r\n    set foo(value) { this.#value = value; }\r\n}\r\n```\r\n\r\n**Expected**: Inlay hint for `value` as `: number`\r\n**Actual**: No inlay hint.",
      "performed_via_github_app": null
    }
  ]

  export default mockData